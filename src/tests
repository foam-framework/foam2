p({"class":"foam.nanos.test.Test","id":"password hashing","description":"testing password hashing dao","server":true,"scheduled":false,"code":"auth = x.get(\"auth\");\nuserDAO = x.get(\"userDAO\");\nuserDAO.removeAll();\n\n// test password hashing\nuser = new foam.nanos.auth.User();\nuser.setFirstName(\"Test\");\nuser.setLastName(\"MintChip\");\nuser.setEmail(\"test@nanopay.net\");\nuser.setPassword(\"Mintchip123\");\nresult = userDAO.put(user);\n\ntest(foam.util.SafetyUtil.isEmpty(result.getPassword()), \"password not returned following first put\");\ntest(auth.loginByEmail(x, \"test@nanopay.net\", \"Mintchip123\") != null, \"login using email and password\");\n\nresult.setPassword(\"Mintchip124\");\nresult2 = userDAO.put(result);\n\ntry {\ntest(foam.util.SafetyUtil.isEmpty(result2.getPassword()), \"password not returned following second put\");\nauth.loginByEmail(x, \"test@nanopay.net\", \"Mintchip124\");\n} catch (Throwable t) {\ntest(t.getMessage() == \"Invalid password\", \"password not updated\");\n}"})
p({"class":"foam.nanos.test.Test","id":"MDAO test","description":"MDAO test","server":true,"scheduled":false,"code":"mdao = new foam.dao.MDAO(foam.nanos.auth.Country.getOwnClassInfo());\nmdao.addIndex(foam.nanos.auth.Country.CODE); \ncountry = new foam.nanos.auth.Country();\ncountry.setCode(\"CN\");\ncountry.setName(\"CHINA\");\nmdao.put(country);\ncountry = country.fclone();\ncountry.setCode(\"CA\");\ncountry.setName(\"CANADA\");\nmdao.put(country);\ncountry = country.fclone();\ncountry.setCode(\"USA\");\ncountry.setName(\"United States of America\");\nmdao.put(country);\nresult = mdao.find(\"CA\");\ntest(result.getName().equals(\"CANADA\"),\"test if country name of CA is CANADA?\");\nresult = mdao.find(\"CAD\");\ntest(result==null,\"test if country name of CAD not found?\");","output":"SUCCESS: test if country name of CA is CANADA?\nSUCCESS: test if country name of CAD not found?\n","notes":""})
p({"class":"foam.nanos.test.Test","id":"MapDAOTest","description":"MapDAOTest","server":true,"scheduled":false,"code":"mdao = new foam.dao.MapDAO(foam.nanos.auth.Country.getOwnClassInfo());\ncountry  = new foam.nanos.auth.Country();\ncountry.setCode(\"CN\");\ncountry.setName(\"CHINA\");\nmdao.put(country);\ncountry=country.fclone();\ncountry.setCode(\"CN2\");\ncountry.setName(\"CHINA2\");\nmdao.put(country);\nresult = mdao.find(\"CN\");\ntest(result.getName().equals(\"CHINA\"),\"test if country name of CN is CHINA?\");\nresult = mdao.find(\"CAD\");\ntest(result==null,\"test if country name of CAD not found?\");\n\n","notes":""})
p({"class":"foam.nanos.test.Test","id":"PersistedIndex test","description":"tests the persisted index feature","server":true,"scheduled":false,"code":"index = new foam.dao.index.TreeIndex(foam.nanos.auth.Country.CODE);\npindex = new foam.dao.index.PersistedIndex(\"testindex\", index);\ntest(pindex.wrap(\"hello world\") == 0, \"position is 0\");\ntest(pindex.wrap(\"test123\") == 18, \"position is 18\");\ntest(\"hello world\".equals(pindex.unwrap((long) 0)), \"state is hello world\");\ntest(\"test123\".equals(pindex.unwrap((long) 18)), \"state is test123\");","notes":""})
