function fern(t, size) {
  if ( size < 4 ) return;
  t.ss();
  t.fd(size*0.1).rt(3);
  fern(t.lt(80),  size*0.35);
  fern(t.rt(160), size*0.35);
  fern(t.lt(80),  size*0.85);
  t.rs();
}

fern(turtle1.pc('green'), 800)




function tree(t, size) {
  if ( size < 40 ) {
    t.lay(foam.graphics.Circle.create({border: null, color: 'green', alpha: 0.07, radius: 30}));
    return;
  }

  t.ss();
  t.pw(size/20);
  t.fd(size*0.25).bk(7);
  tree(t.rt(20+Math.random()*40), size*0.75);
  tree(t.lt(60+Math.random()*40), size*0.75);
  t.rs();
}

tree(turtle1.pc('black'), 600);




function triangle(t, size) {
  if ( size > 5 ) t.repeat(5, () => {
    triangle(t, size*0.379); t.fd(size).rt(360/5);
  });
}

triangle(turtle1.pc('black'), 200);




function pent(t, size) {
  if ( size > 5 ) t.repeat(5, () => {
    pent(t, size*0.379); t.fd(size).rt(360/5);
  });
}

turtle1.pc('black').repeat(5, () => { pent(turtle1.rt(360/5), 200); });



function pent(t, size) {
  if ( size > 10 ) t.repeat(7, () => {
    pent(t, size*0.45); t.fd(size).rt(360/7);
  });
}

turtle1.pc('black').repeat(7, () => { pent(turtle1.rt(360/7), 150); });




function pent(t, size) {
  if ( size > 10 ) t.repeat(7, () => {
    pent(t, size*0.41); t.fd(size).rt(360/7);
  });
}

turtle1.pc('red').repeat(7, () => { pent(turtle1.rt(360/7), 150); });
