repeat(450, (i) => turtle1.fd(i).rt(89))




function fern(t, size) {
  if ( size < 4 ) return;
  t.ss();
  t.fd(size*0.1).rt(3);
  fern(t.lt(80),  size*0.35);
  fern(t.rt(160), size*0.35);
  fern(t.lt(80),  size*0.85);
  t.rs();
}

fern(turtle1.pc('green'), 800)




function tree(t, size) {
  if ( size < 40 ) {
    t.lay(foam.graphics.Circle.create({border: null, color: 'green', alpha: 0.07, radius: 30}));
    return;
  }

  t.ss();
  t.pw(size/20);
  t.fd(size*0.25).bk(7);
  tree(t.rt(20+Math.random()*40), size*0.75);
  tree(t.lt(60+Math.random()*40), size*0.75);
  t.rs();
}

tree(turtle1.pc('black'), 600);



function triangle(t, size) {
  if ( size > 5 ) t.repeat(3, () => {
    triangle(t, size/2); t.fd(size).rt(360/3);
  });
}

triangle(turtle1.pc('black'), 500);




function triangle(t, size) {
  if ( size > 5 ) t.repeat(3, () => {
    triangle(t, size/2); t.fd(size).rt(360/3);
  });
}

triangle(turtle1.pc('black'), 200);




function pent(t, size) {
  if ( size > 5 ) t.repeat(5, () => {
    pent(t, size*0.379); t.fd(size).rt(360/5);
  });
}

turtle1.pc('black').repeat(5, () => { pent(turtle1.rt(360/5), 200); });



function pent(t, size) {
  if ( size > 10 ) t.repeat(7, () => {
    pent(t, size*0.45); t.fd(size).rt(360/7);
  });
}

turtle1.pc('black').repeat(7, () => { pent(turtle1.rt(360/7), 150); });




function pent(t, size) {
  if ( size > 10 ) t.repeat(7, () => {
    pent(t, size*0.41); t.fd(size).rt(360/7);
  });
}

turtle1.pc('red').repeat(7, () => { pent(turtle1.rt(360/7), 150); });




repeat(450, (i) => {
  turtle1.pc(hsl(radToDeg(turtle1.rotation),70,70)).fd(i).rt(89)
})




canvas1.color='black';

var N = 10;
for ( var i = 1 ; i <= N ; i++ ) {
  for ( var j = 1 ; j <= N ; j++ ) {
    log(i,j);
    add(this.Circle.create({
      x: i*35,
      y: j*35,
      border: null,
      color: 'hsl(' + i/N*100 + ',' + (70+j*30/N) + '%,60%)',
      radius:10}));
  }
}



turtle1.cs();
turtle1.x = 400;
turtle1.y = 500;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pc('rgba(0,0,0,0.2');

repeat(20, (j) => {
  j += 5;
  turtle1.ss();
  repeat(250, (i) => turtle1.fd(i*j/10).rt(89));
  turtle1.rs();
  turtle1.pu().fd(j*22).rt(80).pd();
})




turtle1.cs();
turtle1.x = 350;
turtle1.y = 500;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pc('rgba(0,0,0,0.2');


repeat(20, (j) => {
  j += 10;
  turtle1.ss();
  repeat(250, (i) => turtle1.fd(i*j/10).rt(89));
  turtle1.rs();
  turtle1.pu().fd(j*22).rt(80).pd();
})




turtle1.cs();
turtle1.x = 400;
turtle1.y = 500;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pc('rgba(0,0,0,0.2');

repeat(40, (j) => {
  j+= 5;
  turtle1.ss();
  repeat(150, (i) => turtle1.fd(i*j/10).rt(89));
  turtle1.rs();
  turtle1.pu().fd(j*22).rt(80).pd();
})




turtle1.cs();
turtle1.x = 350;
turtle1.y = 550;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pc('rgba(0,0,0,0.15');

repeat(30, (j) => {
  j += 3;
  turtle1.ss();
  repeat(450, (i) => turtle1.fd(i*j/10).rt(89));
  turtle1.rs();
  turtle1.pu().fd(j*30).rt(50).pd();
})




turtle1.cs();
canvas1.width = canvas1.height = 800;
turtle1.x = 400;
turtle1.y = 400;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pc('rgba(0,0,0,1');
turtle1.lt(7);

function star(t, s) {
  if ( s < 5 ) return;
  t.repeat(3, () => {
    t.ss();
    t.repeat(18, (i) => t.fd(s*i/80).rt(200/13));
    t.lt(360/10);
    star(t, s/2);
    t.rs();
    t.rt(360/3);
  })
}

star(turtle1, 200);




turtle1.cs();
canvas1.width = canvas1.height = 800;
turtle1.x = 400;
turtle1.y = 400;
turtle1.rotation = 0;
turtle1.ht();
turtle1.lt(7);

function star(t, s) {
  if ( s < 5 ) return;
  t.pc('hsl(' + (s/2) + ',70%,70%)');
  t.pw(s/8)
  t.repeat(3, () => {
    t.ss();
    t.repeat(18, (i) => t.fd(s*i/80).rt(200/13));
    t.lt(360/10);
    star(t, s/2);
    t.rs();
    t.rt(360/3);
  })
}

star(turtle1, 200);




turtle1.cs().ht().pwd(4).home();

repeat(18, (i) => {
  turtle1.pc(hsl(i/18*360,90%,70%));
  repeat(36, () => {
    turtle1.fd(30).rt(10);
  });
  turtle1.rt(360/18);
});




turtle1.cs();
canvas1.width = canvas1.height = 800;
turtle1.x = 400;
turtle1.y = 400;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pw(4);

repeat(36, (i) => {
  turtle1.pc('hsl(' + (i/36*360) + ',90%,70%)');
  repeat(36, () => {
    turtle1.fd(30).rt(10);
  });
  turtle1.rt(360/36);
});




turtle1.cs();
canvas1.width = canvas1.height = 800;
turtle1.x = 400;
turtle1.y = 400;
turtle1.rotation = 0;
turtle1.ht();
turtle1.pw(20);

repeat(36, (i) => {
  turtle1.pc('hsla(' + (i*10) + ',90%,70%,0.35)');
  repeat(36, () => {
    turtle1.fd(28).rt(10);
  });
  turtle1.rt(360/36);
});




canvas1.color = 'black';
turtle1.cs();
turtle1.ss();
turtle1.pw(4);

repeat(36, (i) => {
  repeat(36, () => {
    turtle1.pc('hsl(' + (turtle1.rotation*360/Math.PI) + ',90%,70%)');
    turtle1.fd(26).rt(10);
  });
  turtle1.rt(360/36);
});

turtle1.rs();




canvas1.color = 'black'
turtle1.cs();
turtle1.ss();
turtle1.pw(3);

repeat(36*2, (i) => {
  repeat(36, () => {
    turtle1.pc('hsl(' + (turtle1.rotation*360/Math.PI) + ',90%,70%)');
    turtle1.fd(26).rt(10);
  });
  turtle1.rt(360/36/2);
});

turtle1.rs();




canvas1.color = 'black';
turtle1.cs().ht().home();

repeat(360, (i) => {
  turtle1.pc(hsl(turtle1.rotation*360/Math.PI,90,70));
  turtle1.rt(1).ss().pu().fd(20+Math.random()*20).pd().fd(Math.random()*400).rs();
});



canvas1.color = 'black';
turtle1.cs().ht().home();

function fd2(s) {
  repeat(s, () => turtle1.fd(1).rt(0.4));
}

repeat(360, (i) => {
  turtle1.pc(hsl(turtle1.rotation*360/Math.PI,90,70));
  turtle1.rt(1).ss().pu().fd(20+Math.random()*20);
  turtle1.pd();
  fd2(Math.random()*400);
  turtle1.rs();
});




canvas1.color = 'black';
turtle1.cs();
turtle1.ht();

function fd2(s) {
  repeat(s, () => turtle1.fd(1).rt(0.4));
}

repeat(360, (i) => {
  turtle1.pw(1+Math.random()*2);
  turtle1.pc('hsl(' + (turtle1.rotation*360/Math.PI) + ',90%,70%)');
  turtle1.rt(1).ss().pu().fd(20+Math.random()*20);
  turtle1.pd();
  fd2(Math.random()*400);
  turtle1.rs();
});




canvas1.color = 'black';
turtle1.cs();
turtle1.ht();

function fd2(s) {
  repeat(s, () => turtle1.fd(1).rt(0.4));
}

repeat(360, (i) => {
  turtle1.pw(1+Math.random()*24);
  turtle1.pc('hsla(' + (turtle1.rotation*360/Math.PI) + ',90%,70%,0.45)');
  turtle1.rt(1).ss().pu().fd(20+Math.random()*20);
  turtle1.pd();
  fd2(Math.random()*400);
  turtle1.rs();
});




canvas1.color = 'black';
turtle1.cs();
turtle1.ht();

function fd2(s) {
  repeat(s, () => turtle1.fd(1).rt(0.4));
}

repeat(360, (i) => {
  turtle1.pw(1+Math.random()*24);
  turtle1.pc('hsla(' + (turtle1.rotation*360/Math.PI) + ',90%,70%,0.45)');
  turtle1.rt(1).ss().pu().fd(40);
  turtle1.pd();
  fd2(400);
  turtle1.rs();
});




turtle1.cs().home().ht().pw(1.5).repeat(360*4, (i) => {
  turtle1.pc(hsl(turtle1.rotation*360/Math.PI,90,70)).rt(1/4).fd(550).bk(550);
});



var t = turtle1;
t.cs();
t.pw(5);

function sind(d) {
  return Math.sin(d * Math.PI * 2 / 360);
}

function waves(r) {
  repeat(r, (i) => {
    var y = i * t.parent.height / r;
    t.pc('rgba(0,0,0,0.1)');
    t.pu();
    repeat(t.parent.width, (x) => {
      var a = 35 * sind(1000*x/(y+150) + y*3);
      t.gt(x, y + a);
      t.pd();
    });
  });
}

waves(140);




var t = turtle1;
t.cs();
t.pw(4);

function sind(d) {
  return Math.sin(d * Math.PI * 2 / 360);
}

function waves(r) {
  repeat(r, (i) => {
    var y = i * t.parent.height / r;
    t.pc('rgba(0,0,0,0.1)');
    t.pu();
    repeat(t.parent.width/4, (x) => {
      x *= 4;
      var a = 35 * sind(1000*x/(y+150) + y*3);
      t.gt(x, y + a);
      t.pd();
    });
  });
}

waves(200);



var t = turtle1;
t.cs();
t.pw(2);

function sind(d) {
  return Math.sin(d * Math.PI * 2 / 360);
}

function waves(r) {
  repeat(r, (i) => {
    var y = i * t.parent.height / r;
    t.pc('rgba(0,0,0,0.1)');
    t.pu();
    repeat(t.parent.width/4, (x) => {
      x *= 4;
      var a = (10+i/r*50) * sind(1000*x/(y+150) + y*2);
      t.gt(x, y + a);
      t.pd();
    });
  });
}

waves(200);



// inspired by: http://www.mrcolson.com/2015/12/09/Python-Art.html
var t = turtle1.cs().pw(8);

function sind(d) {
  return Math.sin(d * Math.PI * 2 / 360);
}

function waves(r) {
  repeat(r, (i) => {
    var y = i * t.parent.height / r;
    t.pc(hsl(i/r*720%360+180,70,15+i/r*45));
    t.pu();
    repeat(t.parent.width/10, (x) => {
      x *= 10;
      var a = (10+i/r*50) * sind(1000*x/(y+150) + y*2);
      t.gt(x, y + a);
      t.pd();
    });
  });
}

waves(600);


// Grayscale version:
var t = turtle1.cs().pw(8);

function waves(r) {
  repeat(r, (i) => {
    var y = i * t.parent.height / r;
    t.pc(hsl(i/r*720%360+180,0,5+i/r*65));
    t.pu();
    repeat(t.parent.width/10, (x) => {
      x *= 10;
      var a = (10+i/r*50) * sin(degToRad(1000*x/(y+150) + y*2));
      t.gt(x, y + a);
      t.pd();
    });
  });
}

waves(600);




var t = turtle1.cs().pw(1).home().ht().lt(180).pc('rgba(255,255,255,0.7)');
canvas1.color = 'black';

function frac(size, d, a, f2) {
  if ( size < 2 ) return;
  var w = size * (1-d);
  t.pw(w*4).fd(w).rt(a);
  f2 && f2(size);
  frac(size*d, d, a, f2);
}

function feather(d) {
  return function(size) {
    t.ss().lt(90*d);
    frac(size/1.8, 0.99, d/4);
    t.rs();
  };
}

t.ss(); frac(600, 0.99, 2.2); t.rs();
t.lt(180).pw(22).fd(30)
t.ss().lt(90); frac(220, 0.98,  2, feather(1));  t.rs();
t.ss().rt(90); frac(220, 0.98, -2, feather(-1)); t.rs();

t.pw(22).fd(30);
t.pc('rgba(255,255,255,0.5)');
t.ss(); frac(120, 0.95, 6); t.rs();
t.ss(); frac(110, 0.95, 6.3); t.rs();





// Much faster version of above
var t = turtle1.cs().pw(1).home().ht().lt(180).pc('rgba(255,0,0,0.7)');
canvas1.color = 'black';

function frac(size, w, a, f2) {
  if ( size < 5 ) return;
  t.pw(w).fd(5).rt(a*5/size/2);
  f2 && f2(size);
  frac(size-5, (size-5)/size*w, a, f2);
}

function feather(d) {
  return function(size) {
    t.ss().lt(90*d);
    frac(size/1.8, size/8, d*50);
    t.rs();
  };
}

// tail
t.ss(); frac(800, 22, 450); t.rs();

// body
t.lt(180).pw(22).fd(30)

//wings
t.ss().lt(90); frac(270, 10,  180, feather(1));  t.rs();
t.ss().rt(90); frac(270, 10, -180, feather(-1)); t.rs();

//head
t.pc('rgba(255,0,0,0.5)');
t.ss(); frac(180, 22, 175); t.rs();
t.ss(); frac(170, 22, 165); t.rs();



t=turtle1.cs().home().ht().lt(180).pc('rgba(255,0,0,0.7)');function f(s,w,a,c){if(s<5)return;t.pw(w).fd(5).rt(a*5/s/2);c&&c(s);f(s-5,(s-5)/s*w,a,c)}function g(d){return function(s){t.ss().lt(90*d);f(s/1.8,s/8,d*50);t.rs();};}t.ss();f(800,22,450);t.rs().lt(180).pw(22).fd(30).ss().lt(90);f(270,10,180,g(1));t.rs().ss().rt(90);f(270,10,-180,g(-1));t.rs().pc('rgba(255,0,0,0.5)').ss();f(180,22,175);t.rs();f(170,22,165)




var t = turtle1.cs().home().pu().ht();

t.lt(90).fd(100).rt(90);

repeat(10, () => {
  var c = com.google.flow.Circle.create({
    radius: 90,
    arcWidth: 4,
    border: 'white',
    color: hsl(radToDeg(t.rotation), 70, 80),
    alpha: 0.25
  });
  t.fd(80).rt(360/10).lay(c);
});




var t = turtle1.cs().home().pu().ht();
canvas1.color = 'black'

function circles(r) {
  repeat(10, (i) => {
    var c = com.google.flow.Circle.create({
      radius: r,
      arcWidth: 4,
      border: 'white',
      color: hsl(i*36, 100, 80),
      alpha: 0.3,
      originX: t.x-400,
      originY: t.y-400
    }, flow);

    c.addReaction('rotation', "0.003 * timer.time * " + (0.1 + i/10));

    t.lay(c);
  });
}

circles(90);
circles(50);




var t = turtle1;
t.cs().pw(8);

function gotoXYZ(x, y, z) {
  t.pc(hsl(z*2,70,70));
  t.gt(
    canvas1.width/2-x/Math.SQRT2+y/Math.SQRT2,
    canvas1.height/2+x/Math.SQRT2+y/Math.SQRT2-z);
}

function grid(f, opt_inc) {
  var inc = opt_inc || 10;
  for ( var x = -200 ; x <= 200 ; x += inc ) {
    t.pu();
    for ( var y = -200 ; y <= 200 ; y += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
  for ( var y = -200 ; y <= 200 ; y += inc ) {
    t.pu();
    for ( var x = -200 ; x <= 200 ; x += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
}

grid(function(x, y) {
  var d = Math.sqrt(x*x + y*y);
  return 150*Math.cos(d/25)*(200-d)/200;
});




var t = turtle1;
t.cs().pw(12);

function gotoXYZ(x, y, z) {
  t.pc(hsl(z*2,0,z+50));
  t.gt(
    canvas1.width/2-x/Math.SQRT2+y/Math.SQRT2,
    canvas1.height/2+x/Math.SQRT2+y/Math.SQRT2-z);
}


function grid(f, opt_inc) {
  var inc = opt_inc || 10;
  for ( var x = -200 ; x <= 200 ; x += inc ) {
    t.pu();
    for ( var y = -200 ; y <= 200 ; y += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
  for ( var y = -200 ; y <= 200 ; y += inc ) {
    t.pu();
    for ( var x = -200 ; x <= 200 ; x += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
}

grid(function(x, y) {
  var d = Math.sqrt(x*x + y*y);
  return 150*Math.cos(d/25)*(200-d)/200;
}, 1);














var t = turtle3d1;
t.cs();

t.x = t.y = t.z = 0;
t.pitch = 0;
t.pitchUp(2);

repeat(360, (i) => {
  t.fd(10-i/36).rt(10)
});

t.x = t.y = t.z = 0;
t.pitch = 0;
t.pitchUp(-2);

repeat(360, (i) => {
  t.fd(10-i/36).rt(10)
});





var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.x = t.y = t.z = 0;
t.rt(-45);
// t.fd(100);

repeat(18, () => {
  repeat(36, () => {
    t.fd(10).pitchUp(10);
  });

  t.rt(10);
});






var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.x = t.y = t.z = 0;
t.rt(-45);
// t.fd(100);
t.pw(2);

repeat(18, (i) => {
  t.pc(hsl(i/18*100,70,70));

  repeat(36, () => {
    t.fd(10).pitchDown(10);
  });
  t.z = 0;
  t.pitch = 0;
  t.rt(10);
});






var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.x = t.y = t.z = 0;
t.rt(-45);
t.pw(5);

repeat(72*4, (i) => {
  t.pc(hsl(i/72*100,70,70));

  t.ss();
  repeat(36, () => {
    t.fd(10).pitchDown(10);
  });
  t.rs();
  t.z = 0;
  t.pitch = 0;
  t.rt(2.5/4);
});








var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = 0;
t.x = t.y = -60;
t.rt(-45);
t.pw(3);

repeat(72*2, (i) => {
  t.pc(hsl(i/72*180,70,70));

  repeat(36, () => {
    t.fd(10).pitchUp(10);
  });

  t.pu().rt(90).fd(360/72).pitchDown(360/72).lt(90).pd();
  t.z = 0;
  t.pitch = 0;
  t.rt(2.5);
});








var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = 0;
t.x = t.y = 0;
t.rt(-45);
t.pw(3);

repeat(3, () => {
  t.ss().pc('red').rt(30).pitchUp(60).fd(115).rs();
  t.fd(100).rt(360/3);
});










var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = 0;
t.x = t.y = 0;
// t.rt(-45);
t.pw(5);


repeat(8, () => {
  t.pitchUp(90).fd(100);
  repeat(18, () => {
    t.fd(8).pitchDown(10);
  });
  t.fd(100).pitchUp(90);
  t.rt(360/16).fd(20).rt(360/16);
});








var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
 t.rt(-45);
t.pw(5);

t.ss();
repeat(8, () => {
  t.pitchUp(90).fd(100);
  repeat(18, () => {
    t.fd(8).pitchDown(10);
  });
  t.fd(100).pitchUp(90);
  t.rt(360/16).fd(20).rt(360/16);
});

t.rs();
t.z += 210;

repeat(16, () => {
  t.pitchUp(90).fd(50);
  repeat(18, () => {
    t.fd(4).pitchDown(10);
  });
  t.fd(50).pitchUp(90);
  t.rt(360/32).fd(10).rt(360/32);
});

t.z += 50;

repeat(32, () => {
  t.pitchUp(90).fd(25);
  repeat(18, () => {
    t.fd(2).pitchDown(10);
  });
  t.fd(25).pitchUp(90);
  t.rt(360/64).fd(5).rt(360/64);
});





var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
 t.rt(-45);
t.pw(5);

function archRing(n, height, size) {
  t.ss();
  repeat(n, () => {
    t.pitchUp(90).fd(height);
    repeat(18, () => {
      t.fd(size/100*8/n).pitchDown(10);
    });
    t.fd(height).pitchUp(90);
    t.rt(180/n).fd(20*8/n).rt(180/n);
  });
  t.rs();
}

archRing(6, 100, 800);
t.z += 220;
archRing(8, 100, 800);
t.z += 210;
archRing(16, 50, 800);
t.z += 110;
archRing(32, 30, 800);





var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
t.rt(-45);

function archRing(n, height, size) {
  t.ss();
  repeat(n, () => {
    var x = t.x, y = t.y, z = t.z;
    t.pitchUp(90).fd(height);
    repeat(18, () => {
      t.fd(size/100*8/n).pitchDown(10);
    });
    t.fd(height).pitchUp(90);
    t.ss().gt(x, y, z).rs();
    t.rt(180/n).fd(20*8/n).rt(180/n);
  });
  t.rs();
}

t.pw(5);
archRing(8, 80, 800);

t.pw(4);
t.z += 200;
archRing(10, 80, 800);

t.pw(3);
t.z += 160;
archRing(16, 50, 800);

t.pw(2.5);
t.z += 100;
archRing(24, 30, 800);
t.z += 70;
archRing(360, 0, 800);




var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
 t.rt(-45);
t.pw(2.5);

function archRing(n, height, size) {
  t.ss();
  repeat(n, (i) => {
    t.pitchUp(90).fd(height);
    repeat(18, () => {
      t.fd(size/100*8/n).pitchDown(10);
    });
    t.fd(height).pitchUp(90);
    var a = Math.abs(1.5*180/n * Math.sin(i/n*Math.PI*2));
    t.rt(a).fd(20*8/n).rt(a);
  });
  t.rs();
}

archRing(360, 0, 800);
archRing(14, 100/2, 800);
t.z += 90;
archRing(360, 0, 800);
archRing(28, 100/2, 800);
t.z += 80;
archRing(360, 0, 800);
archRing(2*28, 30, 800);
t.z += 50;
archRing(360, 0, 800);
archRing(2*28, 25, 800);
t.z += 50;
archRing(360, 0, 800);





var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
 t.rt(-45);
t.pw(2.5);
t.pc('rgba(0,0,0,0.5)');

function arch(height, size) {
  t.pitchUp(90).fd(height);
  repeat(18, () => {
    t.fd(size/100*8).pitchDown(10);
  });
  t.fd(height).pitchUp(90);
}

function archRing(n, height, size) {
  t.ss();
  repeat(n, (i) => {
    arch(height,size/n);
    var a = Math.abs(1.5*180/n * Math.sin(i/n*Math.PI*2));
    t.rt(a).fd(20*8/n);
    t.ss().rt(90).pu().fd(10).pd();arch(height, size/n);t.rs();
    t.rt(a);
  });
  t.rs();
}

archRing(360, 0, 800);
archRing(14, 100/2, 800);
t.z += 90;
archRing(360, 0, 800);
archRing(28, 100/2, 800);
t.z += 80;
archRing(360, 0, 800);
archRing(2*28, 30, 800);
t.z += 50;
archRing(360, 0, 800);
archRing(2*28, 25, 800);
t.z += 50;
archRing(360, 0, 800);




var t = turtle3d1;

t.cs().home();
t.x = t.y = t.z = 0;

t.pc('rgba(255,0,0,0.2)');
t.pw(5);

repeat(36*3, () => {
  repeat(36*10, () => {
    t.ss().pu().fd(140).pd().fd(5).rs().rt(10/3);
  });
  t.pitchUp(10/3);
});



var t = turtle3d1;

t.cs().home();
t.x = t.y = t.z = 0;

t.pc('rgba(255,255,255,0.1');
// t.pc('red');
t.pw(2);

repeat(10000, () => {
t.rt(Math.random()*360).pitchUp(Math.random()*360).ss().pu().fd(120).pd().fd(120*Math.random()).rs().rt(10/3);
});



// dandylion
canvas1.color = 'black';
var t = turtle3d1;
t.ht();

t.cs().home();
t.x = t.y = t.z = 0;
t.rt(90);
//t.pitchUp(45);

t.pc('rgba(255,255,255,0.1');
t.pw(2);

repeat(10000, () => {
t.ss().rt(Math.random()*360).pitchUp(Math.random()*360);
t.pu().fd(120).pd().fd(80*Math.random()).rs();
});





var t = turtle3d1;

t.cs().home();
t.x = t.y = t.z = t.pitch = 0;

t.pc('rgba(255,255,255,0.5');
t.pc('white');
t.pw(1);

function circle(s) {
  repeat(36, () => { t.fd(s).rt(10); });
}

repeat(36*6, (i) => {
  t.ss().pu().fd(i).pd();
  circle(i/7);
 t.rs();
 t.rt(40); // change to 10 or more
});






var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = -50;
t.x = 80;
t.y = 80;
 t.rt(-45);
t.pw(2);
t.pc('rgba(0,0,0,0.5)');

function arch(height, size) {
  var x = t.x, y = t.y, z = t.z;
  t.pitchUp(90).fd(height);
  repeat(18, () => {
    t.fd(size/100*8).pitchDown(10);
  });
  t.fd(height).pitchUp(90);
  t.ss().gt(x,y,z).rs();
}

function archRing(n, height, size) {
  t.ss();
  repeat(n, (i) => {
    arch(height,size/n);
    var a = Math.abs(1.5*180/n * Math.sin(i/n*Math.PI*2));
    t.rt(a).fd(20*8/n);
    t.ss().rt(90).pu().fd(10).pd();arch(height, size/n);t.rs();
    t.rt(a);
  });
  t.rs();
}

//archRing(360, 0, 800);
archRing(14, 100/2, 800);
t.z += 90;
//archRing(360, 0, 800);
archRing(28, 100/2, 800);
t.z += 80;
//archRing(360, 0, 800);
archRing(2*28, 30, 800);
t.z += 50;
//archRing(360, 0, 800);
archRing(2*28, 25, 800);
t.z += 50;
archRing(360*4, 0, 800);




// tree
var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = 350;
t.x = 80;
t.y = 80;
t.rt(-45);
t.pw(20);
//t.pc('green');
t.pc("rgba(0,255,0,0.1)");

t.rt(1);
t.pitchDown(0.125);

repeat(3600*2, (i) => {
  t.fd(i/200).rt(10);
});






var t = turtle3d1;
t.cs().pw(12);

function gotoXYZ(x, y, z) {
  t.pc(hsl(z*2,0,z*0.5+50));
  t.gt(x,y,z);
}


function grid(f, opt_inc) {
  var inc = opt_inc || 10;
  for ( var x = -200 ; x <= 200 ; x += inc ) {
    t.pu();
    for ( var y = -200 ; y <= 200 ; y += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
  for ( var y = -200 ; y <= 200 ; y += inc ) {
    t.pu();
    for ( var x = -200 ; x <= 200 ; x += inc ) {
      gotoXYZ(x, y, f(x,y));
      t.pd();
    }
  }
}

grid(function(x, y) {
  var d = Math.sqrt(x*x + y*y);
  return 150*Math.cos(d/25)*(200-d)/200;
}, 1);



circle1.x = 150;

global.hsl = hsl;

function tree(t, size) {
  if ( size < 40 ) return;

  if ( size > 45 && size < 55 ) {
    var leaf = com.google.flow.Circle.create({border: null, color: 'green', radius: 15}, flow);

    var h = Math.random()*20;
    var s = 80+Math.random()*20;
    var l = Math.random()*10+30;

    leaf.addReaction('color', "hsl(Math.min(150,Math.max(20,circle1.x))+" + h + ", " + s + "," + l +")");
    t.lay(leaf);
  }

  t.ss();
  t.pw(size/20);
  t.fd(size*0.25).bk(7);
  tree(t.rt(20+Math.random()*40), size*0.75);
  tree(t.lt(60+Math.random()*40), size*0.75);
  t.rs();
}

tree(turtle1.pc('black'), 600);




var t = turtle3d1;

t.cs();
t.home();
t.pc(hsla(50, 50, 0, 0.05));
t.pw(6);

repeat(360, () => {
  repeat(36, () => {
    t.fd(15).rt(10);
  });
  t.rollLeft(1);
});



// 2d to 3d, good version
var t = turtle3d1;
t.cs().home();

repeat(36, () => {
  repeat(36, () => {
//    t.rt(180/36).fd(20).rt(180/36);
    t.pitchUp(180/36).fd(20).pitchUp(180/36);
  });
  t.lt(10);
});



// collasium, good version
var t = turtle3d1;
t.cs();

t.pitch = 0;
t.home();
t.z = 50;
t.x = 60;
t.y = 100;
t.rt(-35);
t.pw(2.5);
t.pc('rgba(0,0,0,0.5)');

function arch(height, size) {
  t.pitchUp(90).fd(height);
  repeat(18, () => {
    t.fd(size/100*8).pitchDown(10);
  });
  t.fd(height).pitchUp(90);
}

function archRing(n, height, size) {
  t.ss();
  repeat(n, (i) => {
    arch(height,size/n);
    var a = Math.abs(1.5*180/n * Math.sin(i/n*Math.PI*2));
    t.rt(a).fd(20*8/n);
    t.rt(a);
  });
  t.rs();
}

archRing(360, 0, 800);
archRing(14, 100/2, 800);
t.z += 100;
archRing(360, 0, 800);
archRing(28, 100/2, 800);
t.z += 80;
archRing(360, 0, 800);
archRing(2*28, 30, 800);
t.z += 50;
archRing(360, 0, 800);
archRing(2*28, 25, 800);
t.z += 50;
archRing(360, 0, 800);


var t = turtle3d1;

t.cs().home().rt(-35).pw(2.5).pc('rgba(0,0,0,0.5)');

t.z = 50;
t.x = 60;
t.y = 100;

function arch(height, size) {
  var x = t.x, y = t.y, z = t.z;
  t.pitchUp(90).fd(height);
  repeat(18, () => {
    t.fd(size/100*8).pitchDown(10);
  });
  t.fd(height).pitchUp(90);
  t.ss().gt(x, y, z).rs();
}

function archRing(n, height, size) {
  t.ss();
  repeat(n, (i) => {
    arch(height,size/n);
    var a = Math.abs(1.5*180/n * Math.sin(i/n*Math.PI*2));
    t.rt(a).fd(20*8/n);
    t.rt(a);
  });
  t.rs();
}

archRing(14, 100/2, 800);
t.z += 100;
archRing(28, 100/2, 800);
t.z += 80;
archRing(2*28, 30, 800);
t.z += 50;
archRing(2*28, 25, 800);
t.z += 50;
archRing(360, 0, 800);



// sphere, good version
var t = turtle3d1;
t.cs().home();

repeat(18, () => {
  repeat(36, () => {
    t.pitchUp(5).fd(20).pitchUp(5);
  });
  t.lt(10);
});



// dandylion, good version
var t = turtle3d1;

t.ht().cs().home().pw(2).pc('rgba(255,255,255,0.1');

repeat(10000, () => {
  t.ss();
  t.rt(Math.random()*360).pitchUp(Math.random()*360);
  t.pu().fd(100).pd().fd(80*Math.random());
  t.rs();
});



// grid, good version
var t = turtle3d1;
t.cs().pw(12);

function grid(f, opt_inc) {
  var inc = opt_inc || 10;
  for ( var y = -200 ; y <= 200 ; y += inc ) {
    t.pu();
    for ( var x = -200 ; x <= 200 ; x += inc ) {
      var z = f(x,y);
      t.pc(hsl(50,0,z*0.5+50));
      t.gt(x,y,z);
      t.pd();
    }
  }
}

grid(function(x, y) {
  var d = Math.sqrt(x*x + y*y);
  return 250*Math.cos(d/25)*(200-d)/200;
}, 1);


// 3D Fern
var t = turtle3d1;

t.cs().pc('black').home().pitchUp(90).pu().bk(200).pd().ht().pitchDown(20);

function fern(t, size) {
  if ( size < 10 ) return;
  t.ss();
  t.fd(size*0.1).lt(3).pitchUp(6);
  fern(t.lt(80),  size*0.35);
  fern(t.rt(160), size*0.35);
  fern(t.lt(80),  size*0.85);
  t.rs();
}

fern(t.pc('green'), 600)
t.addReaction('zRotation', "timer.time/1000");



// 3D Tree
var t = turtle3d1;

t.cs().pc('black').home().pitchUp(90).pu().bk(300).pd().ht();

function tree(t, size) {
  if ( size < 60 ) return;

  t.ss();
  t.pw(size/20);
  t.fd(size*0.25);
  t.rollLeft(Math.random()*180);
  tree(t.rt(20+Math.random()*30), size*0.8);
  tree(t.lt(50+Math.random()*30), size*0.8);
  t.rs();
}

tree(t, 400);

t.addReaction('zRotation', "timer.time/1000");




// 3D Tree, another version
var t = turtle3d1;

t.cs().pc('black').home().pitchUp(90).pu().bk(300).pd().ht();

function tree(size) {
  if ( size < 50 ) return;

  t.ss();
  t.rollLeft(80+Math.random()*20);
  t.pw(size/30);
  t.fd(size*0.28);

  tree(size*0.7);

  t.rt(30);
  tree(size*2/3);

  t.lt(50+Math.random()*20);
  tree(size*2/3);

  t.rs();
}

tree(500);

t.addReaction('zRotation', "timer.time/1000");



// 3D Shell
var t = turtle3d1;

var fib = [ 1, 0, 1, 1, 2, 3, 5, 8 ];

t.cs().home().pw(1).ht();
t.pc(hsla(50, 50, 0, 0.4));

t.pitchUp(90);

repeat(360, (j) => {
  t.ss();
  repeat(4, (i) => {
    repeat(18, (k) => {
      t.pc(hsla(70,0,100,Math.sin(k/18*Math.PI)));
      t.pitchDown(5).fd((fib[i]+fib[i-1]*j/360)*2).pitchDown(5);
    });
    t.pitchDown(180);
  });
  t.rs();
  t.rollLeft(1);
});



// 3D Shell, 1.1
var t = turtle3d1;

var fib = [ 1, 0, 1, 1, 2, 3, 5, 8 ];

t.cs().home().pw(1).ht().pw(6);

t.pitchUp(90);

repeat(360*2, (j) => {
  j /= 2;
  t.ss();
  repeat(4, (i) => {
    repeat(36, (k) => {
      t.pc(hsla(
        70,
        0,
        100*Math.sin(k/36*Math.PI),
        Math.sin(k/36*Math.PI)/2));
      t.pitchDown(2.5).fd((fib[i]+fib[i-1]*j/360)).pitchDown(2.5);
    });
    t.pitchDown(180);
  });
  t.rs();
  t.rollLeft(0.5);
});


// 3D Shell, v2
var t = turtle3d1;

var fib = [ 1, 0, 1, 1, 2, 3, 5, 8 ];

t.cs().home().pw(2).ht();

t.pitchUp(100).rt(35).rollRight(-10);

repeat(360/4, (j) => {
  j*=4;
  t.ss();
  repeat(5, (i) => {
    t.pw(0.4+1.5*i/4);
    repeat(36, (k) => {
      t.pc(hsla(70,0,100,Math.sin(k/36*Math.PI)));
      t.pitchDown(2.5).fd(1.2*(fib[i]+fib[i-1]*j/360)).pitchDown(2.5);
    });
    t.pitchUp(180);
  });
  t.rs();
  t.rollLeft(1*4);
});




// 3D Shell, v3
var t = turtle3d1;

var fib = (function() {
  var fib_ = [ 1, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];

  return function(i) {
    var floor = Math.floor(i);
    var frac  = i-floor;
    return fib_[floor+1] + frac * fib_[floor];
  };
})();

t.cs().home().pw(2).ht().pc('white');

// t.pitchUp(90);

function arc(s) {
  repeat(36, (i) => {
    t.pc(hsla(70,0,100, Math.sin((i-1)/35*Math.PI)));
    t.pitchDown(2.5).fd(s).pitchDown(2.5);
  });
}

repeat(36 * 5, (i) => {
  var a = i / 34 ;
console.log(a);
  t.ss().pu().fd(fib(a)).pd();arc(1.2*fib(a+1));t.rs();
  t.rt(10);
});







// 3D Jellyfish, v2
var t = turtle3d1;

var fib = (function() {
  var fib_ = [ 1, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];

  return function(i) {
    var floor = Math.floor(i);
    var frac  = i-floor;
    return fib_[floor+1] + frac * fib_[floor];
  };
})();

t.cs().home().pw(2.5).ht().pc('white');

//t.pitchUp(45);
t.rt(100);

function arc(s) {
  repeat(36, (i) => {
    t.pc(hsla(70,0,100, Math.sin((i-1)/35*Math.PI)));
    t.pitchDown(2.5).fd(s).pitchDown(2.5);
  });
}

repeat(36 * 6 + 9, (i) => {
  var a = i / 36 ;
  t.ss().pu().fd(fib(a)).pd();arc(1.2*fib(a+1));t.rs();
  t.rollLeft(10);
  // t.lt(10); // instead of line above gives a snail
});





// 3D Long Shell, v2
var t = turtle3d1;

var fib = (function() {
  var fib_ = [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ];

  return function(i) {
    var floor = Math.floor(i);
    var frac  = i-floor;
    return fib_[floor] + frac * (fib_[floor+1] - fib_[floor]);
  };
})();

t.cs().home().pw(2).ht().pc('white');

//t.pitchUp(90);

function arc(s) {
  t.pitchUp(180);
  repeat(36, (i) => {
    t.pc(hsla(70,0,100, Math.sin((i-1)/35*Math.PI)));
    t.pitchDown(2.5).fd(s).pitchDown(2.5);
  });
}

t.rollLeft(90);

repeat(36 * 5, (i) => {
  var a = i / 36 ;
  t.ss().pu();arc(1.2*fib(a));t.pd();arc(1.2*fib(a+1));t.rs();
  t.rt(10);
});



// 3D Shell, simple version
var t = turtle3d1;

t.cs().home().pw(2).ht().pc('red');

function arc(s) {
  t.pitchUp(90);
  repeat(36, (i) => {
    t.pc(hsla(70,0,100, .2 + 0.8*Math.sin((i-1)/35*Math.PI)));
    t.pitchDown(2.5).fd(s/Math.PI/8).pitchDown(2.5);
  });
}

repeat(36 * 5, (i) => {
  var a = i / 36;
  t.ss().pu().fd(19*(fib(a+1)-1)).pd();
  arc(20*fib(a));
  t.rs().rt(10);
//  t.rs().rollLeft(10);
});




// 3D Spiral Shell
var t = turtle3d1;
t.zRotation = -5.17;

t.cs().home().pw(2).ht().pc('red');

function arc(s) {
  t.pitchUp(90);
  repeat(36, (i) => {
    t.pc(hsla(70,0,100, .2 + 0.8*Math.sin((i-1)/35*Math.PI)));
    t.pitchDown(2.5).fd(s/Math.PI/8).pitchDown(2.5);
  });
}

repeat(36 * 9, (i) => {
  var a = i / 36;
  t.ss().pu().fd(19*(fib(a+1)-1)).pd();
  arc(20*fib(a));
  t.rs().rt(10);
  t.pitchUp(10);
});




// DNA
var t = turtle3d1;

t.cs().home().pw(3).ht().pc('white').pu().down(200).pd();


t.rt(45).pitchUp(45);

repeat(20, () => {
  t.ss().pu().fd(80).pd().bk(160).rs();
  t.pu().up(15).pd().rt(15);
})



// Tile
var t = turtle3d1;

t.home().cs().pc('white').pw(1);

function circle(c) {
  t.repeat(36, (i) => {
    t.rt(360/36/2).fd(2);
    if ( c && i % 9 === 0 ) { t.ss().lt(85); circle(c-1); t.rs(); }
    t.fd(2).rt(360/36/2);
  });
}

circle(5);




// Cells
var t = turtle3d1;

t.home().cs().pw(1);

function hex(s) {
  repeat(6, (i) => {
    t.fd(20).rt(360/6);
    if ( s && i == 2 ) {
      t.ss().lt(120);
      hex(s-1);
      t.rs();
    }
    if ( s && i == 4 ) {
      t.ss().rt(120);
      hex(s-1);
      t.rs();
    }
  });
}

hex(5);



// 3D Cells
var t = turtle3d1;

t.home().cs().pw(1).pc(hsla(0,0,0,0.2));

function fd(s, w) {
  repeat(s, () => {
    t.fd(1).ss().pitchUp(86).fd(w).rs();
  });
}

function hex(w, h) {
  repeat(6, (i) => {
    fd(12, 15);
    t.rt(360/6);
    if ( w && i == 2 ) {
      t.ss().lt(120);
      hex(w-1, h);
      t.rs();
    }
    if ( h && i == 4 ) {
      t.ss().rt(120);
      hex(0, h-1);
      t.rs();
    }
  });
}

hex(6,6);


// 3D Christmas Tree
var t = turtle3d1;

t.cs().pc('black').pw(2).pu().home().pitchUp(90).bk(110).pd().ht();

function fern(t, size) {
  if ( size < 10 ) return;
  t.ss();
  t.fd(size*0.005/16).rollLeft(30+Math.random()*40);
  t.ss().lt(80).fd((1-Math.random()/10)*size*0.1).rs();
  fern(t, size*0.99825);
  t.rs();
}

fern(t.pc('green'), 1900);


t.pw(4);
t.home().pc('red').fd(300).bk(600);
t.home().pc('black').rt(90).fd(300).bk(600);
t.home().pc('blue').up(300).down(600);


// t.addReaction('zRotation', "timer.time/1000");
t.clearReaction('zRotation');


// 3D Dome
var t = turtle3d1;

t.home().cs().pw(2).pc('black');

repeat(20, (i) => {
  t.pu().fd(-5).down(10*Math.sin(i/20*Math.PI/4)).fd(10).rt(90).pd();
  repeat(18, () => {
    t.fd(i*2).rt(20);
  });
  t.lt(90);
});


// 3D Dome, V2
var t = turtle3d1;
var prev = [];

t.home().cs().pw(1).pc('black');

repeat(20, (i) => {
  t.pu().fd(-5).down(10*Math.sin(i/20*Math.PI/4)).fd(10).rt(90).pd();
  repeat(36, (j) => {
    t.fd(i).rt(10);
    var p = prev[j];
    if ( p ) {
      t.ss().gt(p[0], p[1], p[2]).rs();
    }
    prev[j] = [t.x, t.y, t.z];
  });
  t.lt(90);
});



// 3D Interactive Dome
var t = turtle3d1;

t.ht();

function f() {
  var prev = [];

  t.home().cs().pw(1).pc('black');
  repeat(20, (i) => {
    t.pu().fd(-5).down(10*Math.sin(i/20*Math.PI*((circle1.x-100)/100))).fd(10).rt(90).pd();
    repeat(36, (j) => {
      t.fd(i).rt(10);
      var p = prev[j];
      if ( p ) {
        t.ss().gt(p[0], p[1], p[2]).rs();
      }
      prev[j] = [t.x, t.y, t.z];
    });
    t.lt(90);
  });
}

circle1.x$.sub(f);



// 3D thing
var t = turtle3d1;
var prev = [];

t.home().cs().pw(1).pc('black');

repeat(20, (i) => {
  t.pu().fd(-5).down(10*Math.sin(i/20*Math.PI*4)).fd(10).rt(90).pd();
  repeat(36, (j) => {
    t.fd(i).rt(10);
    var p = prev[j];
    if ( p ) {
      t.ss().gt(p[0], p[1], p[2]).rs();
    }
    prev[j] = [t.x, t.y, t.z];
  });
  t.lt(90);
});