<title>CRUNCH Lite</title>
<h1>CRUNCH Lite</h1>

<foam class="foam.flow.widgets.DocumentationIncomplete" status="wip" />

Note: code snippets are all written in Javascript syntax, although this is not
  meant to imply that every method called has a javascript implementation.

<h2>What is `crunch.lite`?</h2>

CRUNCH Lite makes it possible for capability data to be stored on objects rather
than in association with a user. This allows control over data a user has to
submit to do something with a specific object.

For example, an object representing a choice of icecream may require the user
to choose at least one flavour. Because we know the configuration of icecream
can be complicated, we choose to make Icecream implement Capable, which adds
CRUNCH Lite features to our Icecream model.

<h2>How-To</h2>

<h3>Implement `Capable`</h3>

<code>
foam.CLASS({
  package: 'com.example.2scoop4u',
  name: 'Icecream',
  implements: [ 'foam.nanos.crunch.lite.Capable ],
  
  properties: [
    // Copy essential properties for Capable
    ...(foam.nanos.crunch.lite.CapableObjectData
      .getOwnAxiomsByClass(foam.core.Property)
      .map(p => p.clone())),
  ],

  methods: [
    // Copy essential methods for Capable
    ...(foam.nanos.crunch.lite.CapableObjectData
      .getOwnAxiomsByClass(foam.core.Method)
      .map(m => m.clone())),
  ]
});
</code>


<h3>Add a requirement to a Capable</h3>

To add a capability that a Capable object requires its own copy of, use the
`addRequirement` method.
<code>
myCapable.addRequirement('MY-CAPABILITY-ID');
</code>

To specify the capabilities that represent a user's prerequisite for filling
Capable requirements, use `setUserCapabilityRequirements`. This will cause an
additional CRUNCH intercept if the user is missing this capability.
<code>
myCapable.setUserCapabilityRequirements(['USER-CAPABILITY-ID']);
</code>

<h3>Verify Requirements</h3>

To verify that a capable object has one or more requirements, use the
`verifyRequirements` method. This will throw IllegalStateException if any of
the capabilities listed are not granted.

<code>
myCapable.verifyRequirements(x, ['MY-CAPABILITY-ID']);
</code>

<h3>Invoking a CRUNCH intercept</h3>

<foam class="foam.flow.widgets.DocumentationIncomplete" status="todo" isSection="true" />

To invoke a CRUNCH intercept, throw a CapabilityRuntimeException. A common way
of doing this is by checking the requirement in a rule.
