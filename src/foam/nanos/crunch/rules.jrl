p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75afsbdkjfbsk-c",
  "name":"Set up User Spid On User Create and Update",
  "priority":100,
  "ruleGroup":"spidCapability",
  "documentation":"On user create or update, if spid is set, remove old spids and create UserCapabilityJunction between User/Spid",
  "daoKey":"localUserDAO",
  "operation":3,
  "after":true,
  "enabled":true,
  "action":{ "class":"foam.nanos.auth.CreateUserCapabilityJunctionOnSpidSet" },
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-afdsgk-sd212",
  "name":"Update User Spid On UCJ Update",
  "priority":100,
  "ruleGroup":"spidCapability",
  "documentation":"Re-assign user spid on CREATE of User-ServiceProvider junction",
  "daoKey":"userCapabilityJunctionDAO",
  "operation":0,
  "after":true,
  "enabled":true,
  "action":{
    "class":"foam.nanos.auth.SetUserServiceProviderJunctionRuleAction"
  },
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e9-crunch0",
  "name":"Notify User On Top Level Capability Status Update",
  "priority":100,
  "ruleGroup":"crunch",
  "documentation":"send notification to user on every status update for their visible capabilities",
  "daoKey":"userCapabilityJunctionDAO",
  "operation":3,
  "after":true,
  "enabled":true,
  "predicate":{"class":"foam.nanos.crunch.IsUserCapabilityJunctionStatusUpdate","includeRenewalStatus":false},
  "action":{"class":"foam.nanos.crunch.SendNotificationOnTopLevelCapabilityStatusUpdate"},
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e9-crunch1",
  "name":"Remove UserCapabilityJunctions on User Deletion",
  "priority":100,
  "ruleGroup":"crunch",
  "documentation":"delete all capability junctions associate with user when the user is removed",
  "daoKey":"localUserDAO",
  "operation":2,
  "after":true,
  "action":{"class":"foam.nanos.crunch.RemoveJunctionsOnUserRemoval"},
  "lifecycleState":1
})
p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e9-crunch2",
  "name":"Invalidate Dependents If Prerequisite Invalidated",
  "priority":1,
  "ruleGroup":"crunch",
  "documentation":"When a ucj falls out of GRANTED (or GRACE_PERIOD) status, also invalidate any ucjs that depend on the first one.",
  "daoKey":"userCapabilityJunctionDAO",
  "operation":1,
  "after":true,
  "enabled":true,
  "predicate":{
    "class":"foam.mlang.predicate.Or",
    "args":[
      {
        "class":"foam.mlang.predicate.And",
        "args":[
          {
            "class":"foam.nanos.ruler.predicate.PropertyEQValue",
            "propName":"isInRenewalPeriod",
            "propValue":true,
            "isNew":false
          },
          {
            "class":"foam.mlang.predicate.Or",
            "args":[
              { "class":"foam.nanos.ruler.predicate.PropertyNEQValue","propName":"isExpired","propValue":true },
              { "class":"foam.nanos.ruler.predicate.PropertyNEQValue","propName":"isInGracePeriod","propValue":true }
            ]
          }
        ]
      },
      {
        "class":"foam.mlang.predicate.And",
        "args":[
          {
            "class":"foam.nanos.ruler.predicate.PropertyEQValue",
            "propName":"status",
            "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":1},
            "isNew":false
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
            "propName":"status",
            "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":1}
          }
        ]
      },
      { 
        "class":"foam.mlang.predicate.And",
        "args":[
          {
            "class":"foam.mlang.predicate.Or",
            "args":[
              {
                "class":"foam.nanos.ruler.predicate.PropertyEQValue",
                "propName":"status",
                "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":0},
                "isNew":false
              },
              {
                "class":"foam.nanos.ruler.predicate.PropertyEQValue",
                "propName":"status",
                "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":6},
                "isNew":false
              }
            ]
          },
          {
            "class":"foam.nanos.ruler.predicate.PropertyNEQValue",
            "propName":"status",
            "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":3}
          },
        ]
      }
    ]
  },
  "action":{"class":"foam.nanos.crunch.ReputDependentUCJs"},
  "lifecycleState":1
})

p({
  "class":"foam.nanos.ruler.Rule",
  "id":"68afcf0c-c718-98f8-0841-75e9-crunch2a",
  "name":"Set top-level ucj to renewable if a ucj goes from granted to renewable",
  "priority":1,
  "ruleGroup":"crunch",
  "documentation":"Set top-level ucj to renewable if a ucj goes from granted to renewable",
  "daoKey":"bareUserCapabilityJunctionDAO",
  "operation":1,
  "after":true,
  "enabled":true,
  "predicate":{
    "class":"foam.mlang.predicate.And",
    "args":[
      {
        "class":"foam.nanos.ruler.predicate.PropertyEQValue",
        "propName":"status",
        "propValue":{"class":"foam.nanos.crunch.CapabilityJunctionStatus","ordinal":1},
        "isNew":false
      },
      { "class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"isInRenwalPeriod","propValue":false, "isNew":false },
      { "class":"foam.nanos.ruler.predicate.PropertyEQValue","propName":"isInRenwalPeriod","propValue":true }
    ]
  },
  "action":{"class":"foam.nanos.crunch.ReputDependentUCJs"},
  "lifecycleState":1
})
