/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

foam.SCRIPT({
  id: 'foam.parser.html.LibScript',
  code: function() {
  // By decree of:
  // http://xahlee.info/js/html5_non-closing_tag.html
  var selfClosingNodeNames = {
    area: true,
    base: true,
    br: true,
    col: true,
    command: true,
    embed: true,
    hr: true,
    img: true,
    input: true,
    keygen: true,
    link: true,
    meta: true,
    param: true,
    source: true,
    track: true,
    wbr: true
  };

  // By decree of:
  // http://www.theukwebdesigncompany.com/articles/entity-escape-characters.php
  var unescapeMap = {
    '#100': 'd',
    '#101': 'e',
    '#102': 'f',
    '#103': 'g',
    '#104': 'h',
    '#105': 'i',
    '#106': 'j',
    '#107': 'k',
    '#108': 'l',
    '#109': 'm',
    '#110': 'n',
    '#111': 'o',
    '#112': 'p',
    '#113': 'q',
    '#114': 'r',
    '#115': 's',
    '#116': 't',
    '#117': 'u',
    '#118': 'v',
    '#119': 'w',
    '#120': 'x',
    '#121': 'y',
    '#122': 'z',
    '#123': '{',
    '#124': '|',
    '#125': '}',
    '#126': '~',
    '#160': ' ',
    '#161': '¡',
    '#162': '¢',
    '#163': '£',
    '#164': '¤',
    '#165': '¥',
    '#166': '¦',
    '#167': '§',
    '#168': '¨',
    '#169': '©',
    '#170': 'ª',
    '#171': '«',
    '#172': '¬',
    '#174': '®',
    '#175': '¯',
    '#176': '°',
    '#177': '±',
    '#178': '²',
    '#179': '³',
    '#180': '´',
    '#181': 'µ',
    '#182': '¶',
    '#183': '·',
    '#184': '¸',
    '#185': '¹',
    '#186': 'º',
    '#187': '»',
    '#188': '¼',
    '#189': '½',
    '#19': 'Å',
    '#190': '¾',
    '#191': '¿',
    '#192': 'À',
    '#193': 'Á',
    '#194': 'Â',
    '#195': 'Ã',
    '#196': 'Ä',
    '#198': 'Æ',
    '#199': 'Ç',
    '#200': 'È',
    '#201': 'É',
    '#202': 'Ê',
    '#203': 'Ë',
    '#204': 'Ì',
    '#205': 'Í',
    '#206': 'Î',
    '#207': 'Ï',
    '#208': 'Ð',
    '#209': 'Ñ',
    '#210': 'Ò',
    '#211': 'Ó',
    '#212': 'Ô',
    '#213': 'Õ',
    '#214': 'Ö',
    '#215': '×',
    '#216': 'Ø',
    '#217': 'Ù',
    '#218': 'Ú',
    '#219': 'Û',
    '#220': 'Ü',
    '#221': 'Ý',
    '#222': 'Þ',
    '#223': 'ß',
    '#224': 'à',
    '#225': 'á',
    '#226': 'â',
    '#227': 'ã',
    '#228': 'ä',
    '#229': 'å',
    '#23': 'í',
    '#230': 'æ',
    '#231': 'ç',
    '#232': 'è',
    '#233': 'é',
    '#234': 'ê',
    '#235': 'ë',
    '#236': 'ì',
    '#238': 'î',
    '#239': 'ï',
    '#240': 'ð',
    '#241': 'ñ',
    '#242': 'ò',
    '#243': 'ó',
    '#244': 'ô',
    '#245': 'õ',
    '#246': 'ö',
    '#247': '÷',
    '#248': 'ø',
    '#249': 'ù',
    '#250': 'ú',
    '#251': 'û',
    '#252': 'ü',
    '#253': 'ý',
    '#254': 'þ',
    '#255': 'ÿ',
    '#256': 'Ā',
    '#257': 'ā',
    '#258': 'Ă',
    '#259': 'ă',
    '#260': 'Ą',
    '#261': 'ą',
    '#262': 'Ć',
    '#263': 'ć',
    '#264': 'Ĉ',
    '#265': 'ĉ',
    '#266': 'Ċ',
    '#267': 'ċ',
    '#268': 'Č',
    '#269': 'č',
    '#27': 'ĕ',
    '#270': 'Ď',
    '#271': 'ď',
    '#272': 'Đ',
    '#273': 'đ',
    '#274': 'Ē',
    '#275': 'ē',
    '#276': 'Ĕ',
    '#278': 'Ė',
    '#279': 'ė',
    '#280': 'Ę',
    '#281': 'ę',
    '#282': 'Ě',
    '#283': 'ě',
    '#284': 'Ĝ',
    '#285': 'ĝ',
    '#286': 'Ğ',
    '#287': 'ğ',
    '#288': 'Ġ',
    '#289': 'ġ',
    '#290': 'Ģ',
    '#291': 'ģ',
    '#292': 'Ĥ',
    '#293': 'ĥ',
    '#294': 'Ħ',
    '#295': 'ħ',
    '#296': 'Ĩ',
    '#297': 'ĩ',
    '#298': 'Ī',
    '#299': 'ī',
    '#300': 'Ĭ',
    '#301': 'ĭ',
    '#302': 'Į',
    '#303': 'į',
    '#304': 'İ',
    '#305': 'ı',
    '#306': 'Ĳ',
    '#307': 'ĳ',
    '#308': 'Ĵ',
    '#309': 'ĵ',
    '#31': 'Ľ',
    '#310': 'Ķ',
    '#311': 'ķ',
    '#312': 'ĸ',
    '#313': 'Ĺ',
    '#314': 'ĺ',
    '#315': 'Ļ',
    '#316': 'ļ',
    '#318': 'ľ',
    '#319': 'Ŀ',
    '#32': ' ',
    '#320': 'ŀ',
    '#321': 'Ł',
    '#322': 'ł',
    '#323': 'Ń',
    '#324': 'ń',
    '#325': 'Ņ',
    '#326': 'ņ',
    '#327': 'Ň',
    '#328': 'ň',
    '#329': 'ŉ',
    '#33': '!',
    '#330': 'Ŋ',
    '#331': 'ŋ',
    '#332': 'Ō',
    '#333': 'ō',
    '#334': 'Ŏ',
    '#335': 'ŏ',
    '#336': 'Ő',
    '#337': 'ő',
    '#338': 'Œ',
    '#339': 'œ',
    '#34': '"',
    '#340': 'Ŕ',
    '#340': 'Ŕ',
    '#341': 'ŕ',
    '#341': 'ŕ',
    '#342': 'Ŗ',
    '#342': 'Ŗ',
    '#343': 'ŗ',
    '#343': 'ŗ',
    '#344': 'Ř',
    '#344': 'Ř',
    '#345': 'ř',
    '#345': 'ř',
    '#346': 'Ś',
    '#346': 'Ś',
    '#347': 'ś',
    '#347': 'ś',
    '#348': 'Ŝ',
    '#348': 'Ŝ',
    '#349': 'ŝ',
    '#349': 'ŝ',
    '#35': '#',
    '#35': 'ť',
    '#350': 'Ş',
    '#350': 'Ş',
    '#351': 'ş',
    '#351': 'ş',
    '#352': 'Š',
    '#352': 'Š',
    '#353': 'š',
    '#353': 'š',
    '#354': 'Ţ',
    '#354': 'Ţ',
    '#355': 'ţ',
    '#355': 'ţ',
    '#356': 'Ť',
    '#356': 'Ť',
    '#358': 'Ŧ',
    '#358': 'Ŧ',
    '#359': 'ŧ',
    '#359': 'ŧ',
    '#36': '$',
    '#360': 'Ũ',
    '#360': 'Ũ',
    '#361': 'ũ',
    '#361': 'ũ',
    '#362': 'Ū',
    '#362': 'Ū',
    '#363': 'ū',
    '#363': 'ū',
    '#364': 'Ŭ',
    '#364': 'Ŭ',
    '#365': 'ŭ',
    '#365': 'ŭ',
    '#366': 'Ů',
    '#366': 'Ů',
    '#367': 'ů',
    '#367': 'ů',
    '#368': 'Ű',
    '#368': 'Ű',
    '#369': 'ű',
    '#369': 'ű',
    '#37': '%',
    '#37': 'Ź',
    '#370': 'Ų',
    '#370': 'Ų',
    '#371': 'ų',
    '#371': 'ų',
    '#372': 'Ŵ',
    '#372': 'Ŵ',
    '#373': 'ŵ',
    '#373': 'ŵ',
    '#374': 'Ŷ',
    '#374': 'Ŷ',
    '#375': 'ŷ',
    '#375': 'ŷ',
    '#376': 'Ÿ',
    '#376': 'Ÿ',
    '#377': 'Ź',
    '#378': 'ź',
    '#378': 'ź',
    '#379': 'Ż',
    '#379': 'Ż',
    '#38': '&',
    '#380': 'ż',
    '#380': 'ż',
    '#381': 'Ž',
    '#381': 'Ž',
    '#382': 'ž',
    '#382': 'ž',
    '#383': 'ſ',
    '#383': 'ſ',
    '#39': '\'',
    '#40': '(',
    '#41': ')',
    '#42': '*',
    '#43': '+',
    '#44': ',',
    '#45': '-',
    '#46': '.',
    '#47': '/',
    '#48': '0',
    '#49': '1',
    '#50': '2',
    '#51': '3',
    '#52': '4',
    '#53': '5',
    '#54': '6',
    '#55': '7',
    '#56': '8',
    '#57': '9',
    '#577': 'ť',
    '#58': ':',
    '#59': ';',
    '#60': '<',
    '#61': '=',
    '#62': '>',
    '#63': '?',
    '#64': '@',
    '#65': 'A',
    '#66': 'B',
    '#67': 'C',
    '#68': 'D',
    '#69': 'E',
    '#70': 'F',
    '#71': 'G',
    '#72': 'H',
    '#73': 'I',
    '#74': 'J',
    '#75': 'K',
    '#76': 'L',
    '#77': 'M',
    '#78': 'N',
    '#79': 'O',
    '#80': 'P',
    '#81': 'Q',
    '#82': 'R',
    '#83': 'S',
    '#84': 'T',
    '#8482': '™',
    '#85': 'U',
    '#86': 'V',
    '#87': 'W',
    '#88': 'X',
    '#89': 'Y',
    '#90': 'Z',
    '#91': '[',
    '#92': '\\',
    '#93': ']',
    '#94': '^',
    '#95': '_',
    '#96': '`',
    '#97': 'a',
    '#98': 'b',
    '#99': 'c',
    '&#173;': '',
    'AElig': 'Æ',
    'Aacute': 'Á',
    'Acirc': 'Â',
    'Agrave': 'À',
    'Aring': 'Å',
    'Atilde': 'Ã',
    'Auml': 'Ä',
    'Ccedil': 'Ç',
    'ETH': 'Ð',
    'Eacute': 'É',
    'Ecirc': 'Ê',
    'Egrave': 'È',
    'Euml': 'Ë',
    'Iacute': 'Í',
    'Icirc': 'Î',
    'Igrave': 'Ì',
    'Iuml': 'Ï',
    'Ntilde': 'Ñ',
    'Oacute': 'Ó',
    'Ocirc': 'Ô',
    'Ograve': 'Ò',
    'Oslash': 'Ø',
    'Otilde': 'Õ',
    'Ouml': 'Ö',
    'THORN': 'Þ',
    'Uacute': 'Ú',
    'Ucirc': 'Û',
    'Ugrave': 'Ù',
    'Uuml': 'Ü',
    'Yacute': 'Ý',
    'aacute': 'á',
    'acirc': 'â',
    'acute': '´',
    'aelig': 'æ',
    'agrave': 'à',
    'amp': '&',
    'aring': 'å',
    'atilde': 'ã',
    'auml': 'ä',
    'brvbar': '¦',
    'ccedil': 'ç',
    'cedil': '¸',
    'cent': '¢',
    'copy': '©',
    'curren': '¤',
    'deg': '°',
    'divide': '÷',
    'eacute': 'é',
    'ecirc': 'ê',
    'egrave': 'è',
    'eth': 'ð',
    'euml': 'ë',
    'euro': '€',
    'frac12': '½',
    'frac14': '¼',
    'frac34': '¾',
    'gt': '>',
    'iacute': 'í',
    'icirc': 'î',
    'iexcl': '¡',
    'igrave': 'ì',
    'iquest': '¿',
    'iuml': 'ï',
    'lt': '<',
    'macr': '¯',
    'micro': 'µ',
    'middot': '·',
    'nbsp': ' ',
    'nbsp': '',
    'not': '¬',
    'ntilde': 'ñ',
    'oacute': 'ó',
    'ocirc': 'ô',
    'ograve': 'ò',
    'ordf': 'ª',
    'ordm': 'º',
    'oslash': 'ø',
    'otilde': 'õ',
    'ouml': 'ö',
    'para': '¶',
    'plusmn': '±',
    'pound': '£',
    'quot': '"',
    'raquo': '»',
    'reg': '®',
    'sect': '§',
    'shy': '',
    'sup1': '¹',
    'sup2': '²',
    'sup3': '³',
    'szlig': 'ß',
    'thorn': 'þ',
    'times': '×',
    'uacute': 'ú',
    'ucirc': 'û',
    'ugrave': 'ù',
    'uml': '¨',
    'uuml': 'ü',
    'yacute': 'ý',
    'yen': '¥',
  };
  var escapeMap = {};
  for ( var key in unescapeMap ) {
    if ( unescapeMap.hasOwnProperty(key) ) escapeMap[unescapeMap[key]] = key;
  }

  // FUTURE: Lazily instantiate RegExp to save memory.
  var unescapeKeys = Object.keys(unescapeMap).map(function(key) {
    return `&${key};`;
  });
  var escapeSequenceRegExp = RegExp(`(?=(${unescapeKeys.join('|')}))\\1`, 'g');
  var escapeKeys = Object.keys(escapeMap).map(function(escapeChar) {
    return `[${escapeChar}]`;
  });
  var escapableCharRegExp = RegExp(`(?=(${escapeKeys.join('|')}))\\1`, 'g');

  foam.LIB({
    name: 'foam.parsers.html',

    methods: [
      function getHtmlEscapeChar(id) {
        if ( ! unescapeMap.hasOwnProperty(id) ) return '';
        return unescapeMap[id];
      },
      function getHtmlEscapeSequence(c) {
        if ( ! escapeMap.hasOwnProperty(c) ) return '';
        return escapeMap[c];
      },
      function isSelfClosing(nodeName) {
        return selfClosingNodeNames[nodeName];
      },
      function unescapeString(str) {
        if ( ! foam.String.isInstance(str) ) return '';

        return str.replace(escapeSequenceRegExp, function(m) {
          // m is in the form of &id; We drop first and last character.
          var id = m.slice(1, -1);
          return unescapeMap[id];
        });
      },
      function escapeString(str) {
        if ( ! foam.String.isInstance(str) ) return '';

        return str.replace(escapableCharRegExp, function(id) {
          return `&${escapeMap[id]};`;
        });
      }
    ]
  });
  }
});
