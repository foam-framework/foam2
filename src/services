p({"class":"foam.nanos.boot.NSpec", "name":"nSpecDAO",                           "serve":true,  "authenticate": false, "serviceClass":"foam.dao.ProxyDAO", "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "localNotificationDAO",
  "lazy": false,
  "serve": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.notification.Notification.getOwnClassInfo())
      .setIndex(new foam.core.PropertyInfo[] {foam.nanos.notification.Notification.GROUP_ID})
      .setAuthorize(false)
      .setPm(true)
      .setSeqNo(true)
      .setDecorator(
        new foam.nanos.notification.NotificationTemplateDAO.Builder(x).setDelegate(
        new foam.nanos.notification.SendNotificationDAO(x,
        new foam.nanos.notification.SendEmailNotificationDAO(
        new foam.nanos.notification.SendSlackNotificationDAO(x)))).build())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("notifications")
      .build();
  """
})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "notificationDAO",
  "lazy": false,
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.notification.Notification.getOwnClassInfo())
      .setAuthorize(true)
      .setInnerDAO((foam.dao.DAO) x.get("localNotificationDAO"))
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.notification.Notification\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"notificationTemplateDAO",          "lazy":false,  "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.SequenceNumberDAO(new foam.dao.java.JDAO(x, foam.nanos.notification.Notification.getOwnClassInfo(), \"notificationTemplates\")));", "client":"{\"of\":\"foam.nanos.notification.Notification\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"AuthenticatedNSpecDAO",              "serve":true,  "serviceClass":"foam.dao.ProxyDAO", "client":"{\"of\":\"foam.nanos.boot.NSpec\",\"cache\":true}"})
p({"class":"foam.nanos.boot.NSpec", "name":"http",                             "lazy":false, "service":{"class":"foam.nanos.jetty.HttpServer","port":8080,"forwardedForProxyWhitelist":[],"welcomeFiles":["/src/foam/nanos/controller/index.html"],"servletMappings":[{"class":"foam.nanos.servlet.ServletMapping","className":"foam.nanos.http.NanoRouter","pathSpec":"/service/*"},{"class":"foam.nanos.servlet.ServletMapping","className":"org.eclipse.jetty.servlet.DefaultServlet","pathSpec":"/*","initParameters":{"dirAllowed":"true","redirectWelcome":"true"}}]}})
p({"class":"foam.nanos.boot.NSpec", "name":"httprouter",                         "serviceClass":"foam.nanos.http.NanoRouter"})
p({"class":"foam.nanos.boot.NSpec", "name":"websockets",                       "lazy":false, "serviceClass":"foam.nanos.ws.NanoWebSocketServer"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmLogger",                           "serviceClass":"foam.nanos.pm.DAOPMLogger"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "auth",
  "serve": true,
  "authenticate": false, 
  "boxClass": "foam.nanos.auth.AuthServiceSkeleton",
  "serviceScript": """
    return new foam.nanos.auth.SystemAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.twofactor.TwoFactorAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.PasswordExpiryAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.EnabledCheckAuthService.Builder(x)
      .setDelegate(new foam.nanos.auth.CachingAuthService(new foam.nanos.auth.UserAndGroupAuthService(x)))
      .build()).build()).build()).build();
  """,
  "client": "{\"class\":\"foam.nanos.auth.CachedAuthServiceProxy\",\"delegate\":{\"class\":\"foam.nanos.auth.ClientLoginAuthService\"}}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "ping",
  "authenticate": false,
  "serviceClass": "foam.nanos.http.PingService"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "uptime",
  "lazy": false,
  "authenticate": false,
  "serviceClass": "foam.nanos.http.UptimeWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "static",
  "authenticate": false,
  "serviceClass": "foam.nanos.http.FileWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "export",
  "serviceClass": "foam.nanos.export.ExportService"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "trace",
  "authenticate": false,
  "parameters": true,
  "serviceClass": "foam.nanos.http.TraceWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "services",
  "serviceClass": "foam.nanos.http.ServicesWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "threadPool",
  "lazy": false,
  "serve": false,
  "serviceClass": "foam.nanos.pool.ThreadPoolAgency"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "testDAO",
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setGuid(true)
      .setOf(foam.nanos.test.Test.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"tests\")
      .setDecorator(new foam.nanos.script.ScriptRunnerDAO(null))
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.test.Test\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"pmInfoDAO",                          "serve":true,  "serviceScript":"return new foam.dao.MDAO(foam.nanos.pm.PMInfo.getOwnClassInfo());","client":"{\"of\":\"foam.nanos.pm.PMInfo\", \"remoteListenerSupport\": false}" })

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"scriptDAO",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setGuid(true)
      .setOf(foam.nanos.script.Script.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"scripts\")
      .setDecorator(new foam.nanos.script.ScriptRunnerDAO(null))
      .setOrder(new foam.core.PropertyInfo[] {foam.nanos.script.Script.ID})
      .setIndex(new foam.core.PropertyInfo[] {foam.nanos.script.Script.ID})
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.script.Script\"}"
})

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"cronDAO",                            
  "serve":true,  
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setGuid(true)
      .setOf(foam.nanos.cron.Cron.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"cronjobs\")
      .setDecorator(new foam.nanos.script.ScriptRunnerDAO(null))
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.cron.Cron\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"cronScheduler",                    "lazy":false, "serviceClass":"foam.nanos.cron.CronScheduler" })
p({"class":"foam.nanos.boot.NSpec", "name":"localUserDAO",                       "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.SequenceNumberDAO (1000, new foam.nanos.auth.PreventDuplicateEmailDAO.Builder(x).setDelegate(new foam.dao.java.JDAO(x, foam.nanos.auth.User.getOwnClassInfo(), \"users\")).build()));"})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"userDAO",
  "serve":true,
  "authenticate": false, 
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setInnerDAO(x.get("localUserDAO"))
      .setOf(foam.nanos.auth.User.getOwnClassInfo())
      .setDecorator(
        new foam.dao.ValidatingDAO(x, 
          new foam.nanos.auth.UserPasswordHashingDAO(x, null), 
          new foam.nanos.auth.validators.UserGroupAndSpidValidator() 
        )
      )
      .build();
  """,
  "client":"""
    { 
      "of":"foam.nanos.auth.User",
      "cache":false,
      "decorators": [{"class":"foam.nanos.fs.FileDAODecorator"}]
    }
  """
})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localGroupDAO",
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("groups")
      .setOf(foam.nanos.auth.Group.getOwnClassInfo())
      .setAuthorize(false)
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.auth.Group\"}"
})

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"groupDAO",                           
  "serve":true,  
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setInnerDAO(x.get("localGroupDAO"))
      .setOf(foam.nanos.auth.Group.getOwnClassInfo())
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.auth.Group\"}" 
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localSessionDAO",
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.session.Session.getOwnClassInfo())
      .setGuid(true)
      .setCreatedAware(true)
      .setCreatedByAware(true)
      .setJournalName("sessions")
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setAuthorize(false)
      .setDecorator(new foam.dao.ValidatingDAO(x, null))
      .build();
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "sessionDAO",
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.session.Session.getOwnClassInfo())
      .setPm(true)
      .setInnerDAO(((foam.dao.DAO) x.get(\"localSessionDAO\")))
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.session.Session\"}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "classes",
  "serviceClass": "foam.nanos.http.ClassesWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "threads",
  "serviceClass": "foam.nanos.http.ThreadsWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "login",
  "serviceClass": "foam.nanos.http.ShowSessionWebAgent"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "memory",
  "serviceScript": """
    memoryWebAgent = new foam.nanos.http.MemoryWebAgent();
    return new foam.nanos.http.RefreshWebAgent(memoryWebAgent);
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "countryDAO",
  "description": "A DAO which contains information about countries.",
  "serve": true,
  "authenticate": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer(\"countryDAO\"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"countries\")
      .setOf(foam.nanos.auth.Country.getOwnClassInfo())
      .setOrder(new foam.core.PropertyInfo[] {foam.nanos.auth.Country.NAME})
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.auth.Country\"}",
  "authNotes": "The \"authenticate\" flag is explicitly set to false because we want to be able to use the countryDAO to populate a dropdown in the sign up form. The DAO is decorated with an AuthenticatedDAO decorator with \"authenticateRead\" set to false so that anyone can read from countryDAO but only those with permission can write to or remove from it."
})
p({"class":"foam.nanos.boot.NSpec", "name":"countryService",                     "serve":true, "serviceClass":"foam.nanos.auth.CountryService"})

p({"class":"foam.nanos.boot.NSpec", "name":"languageDAO",                        "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer(\"languageDAO\")).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"languages\").setOf(foam.nanos.auth.Language.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.auth.Language\"}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "regionDAO",
  "description": "A DAO which contains information about regions in countries. A region is a province or a state, for example.",
  "serve": true,
  "authenticate": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer(\"regionDAO\"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"regions\")
      .setOf(foam.nanos.auth.Region.getOwnClassInfo())
      .setOrder(new foam.core.PropertyInfo[] {foam.nanos.auth.Region.NAME})
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.auth.Region\"}",
  "documentation": "A DAO which contains information about regions in countries. A region is a province or a state, for example.",
  "authNotes": "The \"authenticate\" flag is explicitly set to false because we want to be able to use the regionDAO to populate a dropdown in the sign up form. The DAO is decorated with an AuthenticatedDAO decorator with \"authenticateRead\" set to false so that anyone can read from regionDAO but only those with permission can write to or remove from it."
})
p({"class":"foam.nanos.boot.NSpec", "name":"regionService",                      "serve":true, "serviceClass":"foam.nanos.auth.RegionService"})

//p({"class":"foam.nanos.boot.NSpec", "name":"exportDriverRegistryDAO",            "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"exportDriverRegistrys\").setOf(foam.nanos.export.ExportDriverRegistry.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.export.ExportDriverRegistry\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"exportDriverRegistryDAO",            "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.java.JDAO(x, foam.nanos.export.ExportDriverRegistry.getOwnClassInfo(), \"exportDriverRegistrys\"));","client":"{\"of\":\"foam.nanos.export.ExportDriverRegistry\"}"})

p({"class":"foam.nanos.boot.NSpec", "name":"localPermissionDAO",                       "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"permissions\").setOf(foam.nanos.auth.Permission.getOwnClassInfo()).build();"})

p({
  "class":"foam.nanos.boot.NSpec", 
  "name":"permissionDAO",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.auth.Permission.getOwnClassInfo())
      .setInnerDAO((foam.dao.DAO) x.get(\"localPermissionDAO\"))
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.auth.Permission\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"historyDAO",                         "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.java.JDAO(x, foam.dao.history.HistoryRecord.getOwnClassInfo(), \"historyRecords\"));","client":"{\"of\":\"foam.dao.history.HistoryRecord\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"menuDAO",                            "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setName(\"menu\").setPm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"menus\").setOf(foam.nanos.menu.Menu.getOwnClassInfo()).setOrder(new foam.core.PropertyInfo[] {foam.nanos.menu.Menu.ORDER, foam.nanos.menu.Menu.LABEL}).build().orderBy(foam.nanos.menu.Menu.ORDER);", "client":"{\"of\":\"foam.nanos.menu.Menu\",\"cache\":true}"})

p({"class":"foam.nanos.boot.NSpec", "name":"blobStore",                          "serviceClass":"foam.blob.BlobStore"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "httpBlobService",
  "authenticate": false,
  "serviceScript": """
    httpBlobService = new foam.nanos.blob.HttpBlobService(x, x.get("blobStore"));
    return new foam.nanos.http.SessionWebAgent("service.run.httpBlobService", httpBlobService);
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "httpFileService",
  "authenticate": false,
  "serviceScript": """
    fileService = new foam.nanos.blob.FileService(x, x.get("blobStore"));
    return new foam.nanos.http.SessionWebAgent("service.run.httpFileService", fileService);
  """
})

p({"class":"foam.nanos.boot.NSpec", "name":"blobService",                        "serve":true,  "client": "{ \"class\":\"foam.blob.RestBlobService\", \"serviceName\":\"service/httpBlobService\" }"})
p({"class":"foam.nanos.boot.NSpec", "name":"resetPasswordToken",                 "serve":true,  "authenticate": false, "serviceClass":"foam.nanos.auth.resetPassword.ResetPasswordTokenService","boxClass":"foam.nanos.auth.token.TokenServiceSkeleton","client":"{\"class\":\"foam.nanos.auth.token.ClientTokenService\"}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "dig",
  "parameters": true,
  "serviceScript": "return new foam.nanos.dig.DigWebAgent()"
})

p({"class":"foam.nanos.boot.NSpec", "name":"dugDAO",                            "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setGuid(true).setOf(foam.nanos.dig.DUG.getOwnClassInfo()).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"dugs\").setDecorator(new foam.nanos.dig.DUGDAO(x)).build();","client":"{\"of\":\"foam.nanos.dig.DUG\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"digDAO",                            "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setGuid(true).setOf(foam.nanos.dig.DIG.getOwnClassInfo()).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"digs\").build();","client":"{\"of\":\"foam.nanos.dig.DIG\",\"decorators\": [{\"class\":\"foam.nanos.fs.FileDAODecorator\"},{\"class\":\"foam.nanos.fs.FileArrayDAODecorator\"}]}"})
p({"class":"foam.nanos.boot.NSpec", "name":"demoObjectDAO",                      "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"demoObjects\").setGuid(true).setOf(foam.nanos.demo.DemoObject.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.demo.DemoObject\", \"remoteListenerSupport\": false}"})
p({"class":"foam.nanos.boot.NSpec", "name":"fileDAO",                            "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.KeyValueDAO.Builder(x).setDelegate(new foam.dao.GUIDDAO(new foam.dao.java.JDAO(x, foam.nanos.fs.File.getOwnClassInfo(), \"files\"))).build());","client":"{\"of\":\"foam.nanos.fs.File\",\"cache\":false,\"decorators\": [{\"class\":\"foam.blob.BlobServiceDecorator\"}]}"})
//p({"class":"foam.nanos.boot.NSpec", "name":"serviceProviderDAO",                 "serve":true,  "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer(\"serviceProviderDAO\")).setPm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"spids\").setOf(foam.nanos.auth.ServiceProvider.getOwnClassInfo()).build();", "client":"{\"of\":\"foam.nanos.auth.ServiceProvider\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"serviceProviderDAO",                 "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.java.JDAO(x, foam.nanos.auth.ServiceProvider.getOwnClassInfo(), \"spids\"));","client":"{\"of\":\"foam.nanos.auth.ServiceProvider\"}"})

p({"class":"foam.nanos.boot.NSpec", "name":"liveScriptBundler",                      "lazy":false,  "serve":false, "authenticate": false, "serviceClass":"foam.nanos.http.LiveScriptBundler"})
p({"class":"foam.nanos.boot.NSpec", "name":"emailToken",                         "serve":true,  "serviceClass":"foam.nanos.auth.email.EmailTokenService","boxClass":"foam.nanos.auth.token.TokenServiceSkeleton","client":"{\"class\":\"foam.nanos.auth.token.ClientTokenService\"}"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "verifyEmail",
  "lazy": false,
  "authenticate": false,
  "serviceClass": "foam.nanos.auth.email.EmailVerificationWebAgent"
})

p({"class":"foam.nanos.boot.NSpec", "name":"twofactor",                          "serve":true,  "authenticate": false, "boxClass":"foam.nanos.auth.twofactor.OTPAuthServiceSkeleton", "serviceClass":"foam.nanos.auth.twofactor.GoogleTOTPAuthService", "client":"{\"class\":\"foam.nanos.auth.twofactor.ClientOTPAuthService\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"htmlDocDAO",                         "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.SequenceNumberDAO (new foam.dao.java.JDAO(x, foam.nanos.auth.HtmlDoc.getOwnClassInfo(), \"htmlDoc\")));", "client":"{\"of\":\"foam.nanos.auth.HtmlDoc\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"emailDocService",                  "lazy":false, "serve":true,  "boxClass":"foam.nanos.auth.email.EmailDocInterfaceSkeleton", "serviceClass":"foam.nanos.auth.email.EmailDocService","client":"{\"class\":\"foam.nanos.auth.email.ClientEmailDocService\", \"delegate\": { \"class\":\"foam.box.HTTPBox\", \"url\":\"service/emailDocService\" } }"})
p({"class":"foam.nanos.boot.NSpec","name":"appConfig",                         "lazy":false, "service":{"class":"foam.nanos.app.AppConfig"}})
p({"class":"foam.nanos.boot.NSpec","name":"appConfigService",                   "serve":true, "authenticate": false, "boxClass":"foam.nanos.app.AppConfigServiceSkeleton", "service":{"class":"foam.nanos.app.ContextLookupAppConfigService"}, "client":"{\"class\":\"foam.nanos.app.ClientAppConfigService\",\"delegate\":{\"class\":\"foam.box.HTTPBox\",\"url\":\"service/appConfigService\"}}"})
p({"class":"foam.nanos.boot.NSpec", "name":"agentAuth",                        "lazy":false, "serve":true, "authenticate": false, "description":"Permits users to act as others if permitted. Places user as an agent of the system.", "boxClass":"foam.nanos.auth.AgentAuthServiceSkeleton", "serviceScript":"return new foam.nanos.auth.AgentUserAuthService(x);","client":"{\"class\":\"foam.nanos.auth.ClientAgentAuthService\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"agentJunctionDAO",                 "lazy":false, "serve":true, "description":"DAO responsible for storing agent authentication permission information.","serviceScript": "return new foam.dao.EasyDAO.Builder(x).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"agentJunctions\").setOf(foam.nanos.auth.UserUserJunction.getOwnClassInfo()).build();","client":"{\"of\":\"foam.nanos.auth.UserUserJunction\", \"remoteListenerSupport\": false}"})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"documentDAO",
  "lazy": true,
  "serve": true,
  "serviceScript":
  """
  return new foam.dao.ReadOnlyDAO.Builder(x).setDelegate(new foam.flow.DocumentationFolderDAO.Builder(x).build()).build();
  """,
  "client":
  """
  {
    "of":"foam.flow.Document"
  }
  """
})
p({"class":"foam.nanos.boot.NSpec", "name":"ticketMessageDAO",                 "lazy":true, "serve":true, "serviceScript":"return new foam.dao.PMDAO(new foam.dao.SequenceNumberDAO(new foam.dao.java.JDAO(x, foam.support.model.TicketMessage.getOwnClassInfo(), \"ticketMessages\")))","client":"{\"of\":\"foam.support.model.TicketMessage\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"supportEmailDAO",                  "lazy":true, "serve":true, "serviceScript":"return new foam.dao.PMDAO(new foam.dao.SequenceNumberDAO(new foam.dao.java.JDAO(x, foam.support.model.SupportEmail.getOwnClassInfo(), \"supportEmails\")));","client":"{\"of\":\"foam.support.model.SupportEmail\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"ticketDAO",                        "lazy":true, "serve":true, "serviceScript":"return new foam.dao.PMDAO(new foam.dao.SequenceNumberDAO(new foam.dao.java.JDAO(x, foam.support.model.Ticket.getOwnClassInfo(), \"tickets\")));","client":"{\"of\":\"foam.support.model.Ticket\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"pop3",                             "lazy":true, "serve":true, "boxClass":"foam.nanos.notification.email.POP3EmailSkeleton", "serviceClass":"foam.nanos.notification.email.POP3EmailService","client":"{ \"class\":\"foam.nanos.notification.email.ClientPOP3EmailService\", \"delegate\": { \"class\":\"foam.box.HTTPBox\", \"url\":\"service/pop3\" } }"})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "sugar",
  "lazy": true,
  "serve": false,
  "parameters": true,
  "serviceScript": "return new foam.nanos.dig.SugarWebAgent()"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"sugarDAO",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setGuid(true)
      .setOf(foam.nanos.dig.SUGAR.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName(\"sugars\")
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.dig.SUGAR\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"argumentDAO",                        "serve":true,  "serviceScript":"return new foam.dao.PMDAO(x, new foam.dao.java.JDAO(x, foam.nanos.dig.Argument.getOwnClassInfo(), \"arguments\"));","client":"{\"of\":\"foam.nanos.dig.Argument\"}"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "ruleDAO",
  "serve": true,
  "serviceScript": """
    ed = new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setSeqNo(true)
      .setOf(foam.nanos.ruler.Rule.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("rules")
      .build();
    return new foam.dao.ValidatingDAO(x, ed);
  """,
  "client": """
    {
      "of": "foam.nanos.ruler.Rule"
    }
  """
})
p({"class":"foam.nanos.boot.NSpec", "name":"ruleHistoryDAO",                     "serve":true,  "serviceScript":"dao = new foam.dao.EasyDAO.Builder(x).setPm(true).setSeqNo(true).setOf(foam.nanos.ruler.RuleHistory.getOwnClassInfo()).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"ruleHistory\").build(); ca = new foam.nanos.auth.CreatedAwareDAO.Builder(x).setDelegate(dao).build(); lma = new foam.nanos.auth.LastModifiedAwareDAO.Builder(x).setDelegate(ca).build(); return lma;", "client":"{\"of\":\"foam.nanos.ruler.RuleHistory\"}"})
p({"class":"foam.nanos.boot.NSpec","name":"emailConfig",                       "lazy":false, "service":{"class":"foam.nanos.app.EmailConfig"}})
p({"class":"foam.nanos.boot.NSpec", "name":"serializationTestEchoService", "boxClass": "foam.nanos.test.EchoServiceSkeleton",  "serve":true, "serviceClass":"foam.nanos.test.SerializationTestEchoService", "client":"{\"class\":\"foam.nanos.test.ClientEchoService\",\"delegate\":{\"class\":\"foam.box.SessionClientBox\",\"delegate\":{\"class\":\"foam.box.HTTPBox\",\"method\":\"POST\",\"url\":\"service/serializationTestEchoService\"}}}"})
p({"class":"foam.nanos.boot.NSpec","name":"themeDAO","description":"Stores Themes, which are used to style the application.","serve":true,"authenticate":false,"serviceScript":"return new foam.dao.EasyDAO.Builder(x)\u000a  .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer(\"themeDAO\"))\u000a  .setPm(true)\u000a  .setSeqNo(true)\u000a  .setOf(foam.nanos.theme.Theme.getOwnClassInfo())\u000a  .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)\u000a  .setJournalName(\"themes\")\u000a  .build();","client":"{\"of\":\"foam.nanos.theme.Theme\"}","authNotes":"Needs to be unauthenticated because we need to be able to theme apps before the user has logged in. However, we still need to restrict write access, which we do via an AuthorizationDAO."})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localGroupPermissionJunctionDAO",
  "description":"The junction DAO for the many-to-many relationship between groups and permissions",
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.auth.GroupPermissionJunction.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("groupPermissionJunctions")
      .setPm(true)
      .build();
  """
})

p({"class":"foam.nanos.boot.NSpec", "name":"pmLogger","lazy":true,"serve":false,"serviceClass":"foam.nanos.pm.DAOPMLogger"})
p({"class":"foam.nanos.boot.NSpec", "name":"pm1MinuteDAO","lazy":true,"serve":true,"serviceScript":"return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}" })
p({"class":"foam.nanos.boot.NSpec", "name":"pmHourlyDAO", "lazy":true,  "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setPipelinePm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"PMHourly\").setOf(foam.nanos.analytics.Candlestick.getOwnClassInfo()).build();","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmHourlyReduceManager","lazy":true,"serve":true,"serviceScript":"return new foam.nanos.analytics.DAOReduceManager.Builder(x).setSourceDAO((foam.dao.DAO) x.get(\"pm1MinuteDAO\")).setDestDAO((foam.dao.DAO) x.get(\"pmHourlyDAO\")).setPeriodLengthMs(60*60*1000).build();"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmDailyDAO", "lazy":true,  "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setPipelinePm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"PMDaily\").setOf(foam.nanos.analytics.Candlestick.getOwnClassInfo()).build();","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmDailyReduceManager","lazy":true,"serve":true,"serviceScript":"return new foam.nanos.analytics.DAOReduceManager.Builder(x).setSourceDAO((foam.dao.DAO) x.get(\"pmHourlyDAO\")).setDestDAO((foam.dao.DAO) x.get(\"pmDailyDAO\")).setPeriodLengthMs(24*60*60*1000).build();"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmFoldManager","lazy":true,"serve":true,"serviceScript":"return new foam.nanos.analytics.DAOFoldManager.Builder(x).setDao((foam.dao.DAO) x.get(\"pm1MinuteDAO\")).setPeriodLengthMs(60*1000).build();" })
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"groupPermissionJunctionDAO",
  "description":"The junction DAO for the many-to-many relationship between groups and permissions. NOTE: authorization is setup on local dao.",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.auth.GroupPermissionJunction.getOwnClassInfo())
      .setAuthorize(false)
      .setInnerDAO((foam.dao.DAO) x.get("localGroupPermissionJunctionDAO"))
    .build();""",
  "client":"{\"of\": \"foam.nanos.auth.GroupPermissionJunction\"}"
})

p({"class":"foam.nanos.boot.NSpec", "name":"pmLogger","serviceClass":"foam.nanos.pm.DAOPMLogger"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmInfoDAO","serve":true,"serviceScript":"return new foam.dao.ProxyDAO.Builder(x).setDelegate(new foam.nanos.pm.PMInfoMDAO()).build();","client":"{\"of\":\"foam.nanos.pm.PMInfo\", \"remoteListenerSupport\": false}" })
p({"class":"foam.nanos.boot.NSpec", "name":"pm1MinuteDAO","serve":true,"serviceScript":"return new foam.dao.MDAO(foam.nanos.analytics.Candlestick.getOwnClassInfo());","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}" })
p({"class":"foam.nanos.boot.NSpec", "name":"pmHourlyDAO",   "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setPipelinePm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"PMHourly\").setOf(foam.nanos.analytics.Candlestick.getOwnClassInfo()).build();","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmHourlyReduceManager","serve":true,"serviceScript":"return new foam.nanos.analytics.DAOReduceManager.Builder(x).setSourceDAO((foam.dao.DAO) x.get(\"pm1MinuteDAO\")).setDestDAO((foam.dao.DAO) x.get(\"pmHourlyDAO\")).setPeriodLengthMs(60*60*1000).build();"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmDailyDAO",   "serve":true, "serviceScript":"return new foam.dao.EasyDAO.Builder(x).setPm(true).setPipelinePm(true).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"PMDaily\").setOf(foam.nanos.analytics.Candlestick.getOwnClassInfo()).build();","client":"{\"of\":\"foam.nanos.analytics.Candlestick\"}"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmDailyReduceManager","serve":true,"serviceScript":"return new foam.nanos.analytics.DAOReduceManager.Builder(x).setSourceDAO((foam.dao.DAO) x.get(\"pmHourlyDAO\")).setDestDAO((foam.dao.DAO) x.get(\"pmDailyDAO\")).setPeriodLengthMs(24*60*60*1000).build();"})
p({"class":"foam.nanos.boot.NSpec", "name":"pmFoldManager","serve":true,"serviceScript":"return new foam.nanos.analytics.DAOFoldManager.Builder(x).setDao((foam.dao.DAO) x.get(\"pm1MinuteDAO\")).setPeriodLengthMs(60*1000).build();" })

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"pmDAO",
  "serve":true,
  "serviceScript":
  """
    return new foam.nanos.analytics.FoldManagerDAODecorator.Builder(x)
      .setDelegate(new foam.dao.NullDAO.Builder(x)
      .setOf(foam.nanos.pm.PM.getOwnClassInfo())
      .build())
      .setFm((foam.nanos.analytics.DAOFoldManager) x.get("pmFoldManager"))
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.pm.PM\", \"remoteListenerSupport\": false}"
})
p({"class":"foam.nanos.boot.NSpec", "name":"capabilityDAO",                         "lazy":true,  "serve":true,  "serviceScript":"dao = new foam.dao.PMDAO(x, new foam.dao.java.JDAO(x, foam.nanos.crunch.Capability.getOwnClassInfo(), \"capabilities\")); return new foam.nanos.auth.AuthorizationDAO(x, dao, new foam.nanos.auth.StandardAuthorizer(\"capability\"));", "client":"{\"of\":\"foam.nanos.crunch.Capability\"}"})
p({"class":"foam.nanos.boot.NSpec","name":"userCapabilityJunctionDAO","lazy":false,"serve":true,"authenticate":false,"serviceScript":"dao = new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"userCapabilityJunctions\").setOf(foam.nanos.crunch.UserCapabilityJunction.getOwnClassInfo()).build(); userCap =  new foam.nanos.crunch.UserCapabilityJunctionDAO.Builder(x).setDelegate(dao).build(); ruler = new foam.nanos.ruler.RulerDAO(x,userCap, \"userCapabilityJunctionDAO\"); return ruler;","client":"{\"of\":\"foam.nanos.crunch.UserCapabilityJunction\", \"remoteListenerSupport\": false}"})
p({"class":"foam.nanos.boot.NSpec","name":"deprecatedCapabilityJunctionDAO","lazy":false,"serve":true,"authenticate":false,"serviceScript":"dao = new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"deprecatedCapabilityJunctions\").setOf(foam.nanos.crunch.CapabilityCapabilityJunction.getOwnClassInfo()).build(); return new foam.nanos.auth.AuthorizationDAO(x, dao, new foam.nanos.auth.GlobalReadAuthorizer(\"deprecatedCapabilityJunction\"));","client":"{\"of\":\"foam.nanos.crunch.CapabilityCapabilityJunction\", \"remoteListenerSupport\": false}"})
p({"class":"foam.nanos.boot.NSpec","name":"prerequisiteCapabilityJunctionDAO","lazy":false,"serve":true,"authenticate":false,"serviceScript":"dao = new foam.dao.EasyDAO.Builder(x).setAuthorize(false).setJournalType(foam.dao.JournalType.SINGLE_JOURNAL).setJournalName(\"prerequisiteCapabilityJunctions\").setOf(foam.nanos.crunch.CapabilityCapabilityJunction.getOwnClassInfo()).build(); return new foam.nanos.auth.AuthorizationDAO(x, dao, new foam.nanos.auth.GlobalReadAuthorizer(\"prerequisiteCapabilityJunction\"));","client":"{\"of\":\"foam.nanos.crunch.CapabilityCapabilityJunction\", \"remoteListenerSupport\": false}"})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "strategyDAO",
  "description": "A DAO that knows which objects in the system implement the various interfaces present in the system. It is used on the server by the Strategizer service.",
  "serve": true,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setGuid(true)
      .setOf(foam.strategy.StrategyReference.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("strategyReferences")
      .build();
  """,
  "client": """
    {
      "of": "foam.strategy.StrategyReference",
      "remoteListenerSupport": false
    }
  """,
  "documentation": "A DAO that knows which objects in the system implement the various interfaces present in the system. It is used on the server by the Strategizer service.",
  "authNotes": "This DAO is decorated with a standard AuthenticatedDAO via EasyDAO."
})
p({
  "class": "foam.nanos.boot.NSpec",
  "name": "strategizer",
  "description": "A service that can give you a list of all models in the system that implement a given interface.",
  "serve": true,
  "serviceClass": "foam.strategy.BasicStrategizer",
  "boxClass": "foam.strategy.StrategizerServiceSkeleton",
  "documentation": "A service that can give you a list of all models in the system that implement a given interface.",
  "client": """
    {
      "class": "foam.strategy.ClientStrategizerService",
      "delegate": {
        "class": "foam.box.SessionClientBox",
        "delegate": {
          "class": "foam.box.HTTPBox",
          "url": "service/strategizer"
        }
      }
    }
  """
})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"addressParser",
  "lazy":false,
  "serve":false,
  "service":{
    "class":"foam.nanos.geocode.GoogleMapsAddressParser",
  }
})
p({
  "class":"foam.nanos.boot.NSpec",
  "name":"googleMapsCredentials",
  "lazy":false,
  "serve":false,
  "service":{
    "class": "foam.nanos.geocode.GoogleMapsCredentials"
  }
})
